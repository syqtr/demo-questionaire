{"remainingRequest":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/src/components/QuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/src/components/QuestionList.vue","mtime":1635838773487},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBGbG93Rm9ybSBmcm9tICIuL0Zsb3dGb3JtLnZ1ZSI7CmltcG9ydCBMYW5ndWFnZU1vZGVsIGZyb20gIi4uL21vZGVscy9MYW5ndWFnZU1vZGVsIjsKaW1wb3J0IFF1ZXN0aW9uTW9kZWwsIHsKICBRdWVzdGlvblR5cGUsCiAgQ2hvaWNlT3B0aW9uLAp9IGZyb20gIi4uL21vZGVscy9RdWVzdGlvbk1vZGVsIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBGbG93Rm9ybSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzdWJtaXR0ZWQ6IGZhbHNlLAogICAgICBsYW5ndWFnZTogbmV3IExhbmd1YWdlTW9kZWwoewogICAgICAgIGVudGVyS2V5OiB0aGlzLiR0KCJlbnRlcktleSIpLAogICAgICAgIHNoaWZ0S2V5OiB0aGlzLiR0KCJzaGlmdEtleSIpLAogICAgICAgIG9rOiB0aGlzLiR0KCJvayIpLAogICAgICAgIGNvbnRpbnVlOiB0aGlzLiR0KCJjb250aW51ZSIpLAogICAgICAgIHNraXA6IHRoaXMuJHQoInNraXAiKSwKICAgICAgICBwcmVzc0VudGVyOiB0aGlzLiR0KCJwcmVzc0VudGVyIiksCiAgICAgICAgbXVsdGlwbGVDaG9pY2VIZWxwVGV4dDogdGhpcy4kdCgibXVsdGlwbGVDaG9pY2VIZWxwVGV4dCIpLAogICAgICAgIG11bHRpcGxlQ2hvaWNlSGVscFRleHRTaW5nbGU6IHRoaXMuJHQoIm11bHRpcGxlQ2hvaWNlSGVscFRleHRTaW5nbGUiKSwKICAgICAgICBvdGhlclByb21wdDogdGhpcy4kdCgib3RoZXJQcm9tcHQiKSwKICAgICAgICBwbGFjZWhvbGRlcjogdGhpcy4kdCgicGxhY2Vob2xkZXIiKSwKICAgICAgICBzdWJtaXRUZXh0OiB0aGlzLiR0KCJzdWJtaXRUZXh0IiksCiAgICAgICAgbG9uZ1RleHRIZWxwVGV4dDogdGhpcy4kdCgibG9uZ1RleHRIZWxwVGV4dCIpLAogICAgICAgIHByZXY6IHRoaXMuJHQoInByZXYiKSwKICAgICAgICBuZXh0OiB0aGlzLiR0KCJuZXh0IiksCiAgICAgICAgcGVyY2VudENvbXBsZXRlZDogdGhpcy4kdCgicGVyY2VudENvbXBsZXRlZCIpLAogICAgICAgIGludmFsaWRQcm9tcHQ6IHRoaXMuJHQoImludmFsaWRQcm9tcHQiKSwKICAgICAgICB0aGFua1lvdVRleHQ6IHRoaXMuJHQoInRoYW5rWW91VGV4dCIpLAogICAgICAgIHN1Y2Nlc3NUZXh0OiB0aGlzLiR0KCJzdWNjZXNzVGV4dCIpLAogICAgICAgIGFyaWFPazogdGhpcy4kdCgiYXJpYU9rIiksCiAgICAgICAgYXJpYVJlcXVpcmVkOiB0aGlzLiR0KCJhcmlhUmVxdWlyZWQiKSwKICAgICAgICBhcmlhUHJldjogdGhpcy4kdCgiYXJpYVByZXYiKSwKICAgICAgICBhcmlhTmV4dDogdGhpcy4kdCgiYXJpYU5leHQiKSwKICAgICAgICBhcmlhU3VibWl0VGV4dDogdGhpcy4kdCgiYXJpYVN1Ym1pdFRleHQiKSwKICAgICAgICBhcmlhTXVsdGlwbGVDaG9pY2U6IHRoaXMuJHQoImFyaWFNdWx0aXBsZUNob2ljZSIpLAogICAgICAgIGFyaWFUeXBlQW5zd2VyOiB0aGlzLiR0KCJhcmlhVHlwZUFuc3dlciIpLAogICAgICB9KSwKICAgICAgcXVlc3Rpb25zOiBbCiAgICAgICAgbmV3IFF1ZXN0aW9uTW9kZWwoewogICAgICAgICAgaWQ6ICJmaXJzdF9uYW1lIiwKICAgICAgICAgIHRhZ2xpbmU6ICJIaSEgV2VsY29tZSB0byBvdXIgZGVtbyBzdXJ2ZXkg8J+YiiIsCiAgICAgICAgICB0aXRsZTogIldoYXQgaXMgeW91ciBmaXJzdCBuYW1lPyIsCiAgICAgICAgICB0eXBlOiBRdWVzdGlvblR5cGUuVGV4dCwKICAgICAgICAgIHBsYWNlaG9sZGVyOiAiU3RhcnQgdHlwaW5nIGhlcmUuLi4iLAogICAgICAgIH0pLAogICAgICAgIG5ldyBRdWVzdGlvbk1vZGVsKHsKICAgICAgICAgIGlkOiAiZW1haWwiLAogICAgICAgICAgdGFnbGluZTogIk5pY2UgdG8gbWVldCB5b3Ug8J+RgCwgbGV0J3MgY29udGludWUiLAogICAgICAgICAgdGl0bGU6ICJQcm92aWRlIGFuIGV4YW1wbGUgZW1haWwuIiwKICAgICAgICAgIHR5cGU6IFF1ZXN0aW9uVHlwZS5FbWFpbCwKICAgICAgICAgIHBsYWNlaG9sZGVyOiAiU3RhcnQgdHlwaW5nIGhlcmUuLi4iLAogICAgICAgIH0pLAogICAgICAgIG5ldyBRdWVzdGlvbk1vZGVsKHsKICAgICAgICAgIGlkOiAicGhvbmUiLAogICAgICAgICAgdGl0bGU6ICJEb2luZyBncmVhdCEg8J+RjSBHbyBhaGVhZCBhbmQgdHJ5IHdpdGggYSBwaG9uZSBudW1iZXIuIiwKICAgICAgICAgIHR5cGU6IFF1ZXN0aW9uVHlwZS5QaG9uZSwKICAgICAgICAgIG1hc2s6ICIjIyMjLSMjIy0jIyMiLAogICAgICAgIH0pLAogICAgICAgIC8vIFRoaXMgaXMgcXVlc3Rpb24gZm9yIHJlY29yZAogICAgICAgIG5ldyBRdWVzdGlvbk1vZGVsKHsKICAgICAgICAgIGlkOiAiZmlsZSIsCiAgICAgICAgICB0aXRsZTogIlRlbGwgbWUgYWJvdXQgeW91LiIsCiAgICAgICAgICB0eXBlOiBRdWVzdGlvblR5cGUuRmlsZSwKICAgICAgICAgIGFsbG93T3RoZXI6IHRydWUsCiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICB9KSwKCiAgICAgICAgbmV3IFF1ZXN0aW9uTW9kZWwoewogICAgICAgICAgaWQ6ICJwbGFjZV9jaG9pY2VzIiwKICAgICAgICAgIHRpdGxlOiAiV2hlcmUgYXJlIHlvdSBmcm9tPyIsCiAgICAgICAgICB0eXBlOiBRdWVzdGlvblR5cGUuTXVsdGlwbGVDaG9pY2UsCiAgICAgICAgICBtdWx0aXBsZTogZmFsc2UsCiAgICAgICAgICBoZWxwVGV4dDogIlNlbGVjdCB5b3VyIHBsYWNlLiDwn5GHIiwKICAgICAgICAgIG9wdGlvbnM6IFsKICAgICAgICAgICAgbmV3IENob2ljZU9wdGlvbih7CiAgICAgICAgICAgICAgbGFiZWw6ICJQYXJpcyIsCiAgICAgICAgICAgIH0pLAogICAgICAgICAgICBuZXcgQ2hvaWNlT3B0aW9uKHsKICAgICAgICAgICAgICBsYWJlbDogIkxvZG9uIiwKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIG5ldyBDaG9pY2VPcHRpb24oewogICAgICAgICAgICAgIGxhYmVsOiAiSGVsc2lua2kiLAogICAgICAgICAgICB9KSwKICAgICAgICAgICAgbmV3IENob2ljZU9wdGlvbih7CiAgICAgICAgICAgICAgbGFiZWw6ICJCZXJsaW4iLAogICAgICAgICAgICB9KSwKICAgICAgICAgIF0sCiAgICAgICAgfSksCiAgICAgIF0sCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0KCkgewogICAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7CiAgICB9LAoKICAgIG9uU2VuZERhdGEoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJva2VrZSBvblNlbmREYXRhIik7CiAgICAgIC8vIFNldCBgc3VibWl0dGVkYCB0byB0cnVlIHNvIHRoZSBmb3JtIGtub3dzIG5vdCB0byBhbGxvdyBiYWNrL2ZvcndhcmQKICAgICAgLy8gbmF2aWdhdGlvbiBhbnltb3JlLgogICAgICAvLyB0aGlzLiRyZWZzLmZsb3dmb3JtLnN1Ym1pdCgpOwogICAgICB0aGlzLiRyZWZzLmZsb3dmb3JtLnN1Ym1pdHRlZCA9IHRydWU7CgogICAgICB0aGlzLnN1Ym1pdHRlZCA9IHRydWU7CgogICAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgKi8KICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZ2V0RGF0YSgpOwogICAgICAvKgogICAgICAgICAgWW91IGNhbiB1c2UgRmV0Y2ggQVBJIHRvIHNlbmQgdGhlIGRhdGEgdG8geW91ciBzZXJ2ZXIsIGVnLjoKCiAgICAgICAgICBmZXRjaCh1cmwsIHsKICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsCiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgICAgICB9KQogICAgICAgICovCiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["QuestionList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <flow-form\n      ref=\"flowform\"\n      @submit=\"onSubmit\"\n      :questions=\"questions\"\n      :language=\"language\"\n      :standalone=\"true\"\n    >\n      <template v-if=\"!submitted\" v-slot:complete>\n        <ul style=\"margin-bottom: 3rem\">\n          <li v-for=\"question in questions\" :key=\"question.id\">\n            <p>{{ question.index + 1 }} . {{ question.title }}</p>\n            <audio v-if=\"question.type === 'FlowFormFileType'\" controls>\n              <source :src=\"question.answer\" />\n            </audio>\n            <p v-else style=\"color: black; font-style: italic\">\n              {{ question.answer || \"not answer\" }}\n            </p>\n            <hr />\n          </li>\n        </ul>\n      </template>\n    </flow-form>\n  </div>\n</template>\n\n<script>\nimport FlowForm from \"./FlowForm.vue\";\nimport LanguageModel from \"../models/LanguageModel\";\nimport QuestionModel, {\n  QuestionType,\n  ChoiceOption,\n} from \"../models/QuestionModel\";\n\nexport default {\n  components: {\n    FlowForm,\n  },\n  data() {\n    return {\n      submitted: false,\n      language: new LanguageModel({\n        enterKey: this.$t(\"enterKey\"),\n        shiftKey: this.$t(\"shiftKey\"),\n        ok: this.$t(\"ok\"),\n        continue: this.$t(\"continue\"),\n        skip: this.$t(\"skip\"),\n        pressEnter: this.$t(\"pressEnter\"),\n        multipleChoiceHelpText: this.$t(\"multipleChoiceHelpText\"),\n        multipleChoiceHelpTextSingle: this.$t(\"multipleChoiceHelpTextSingle\"),\n        otherPrompt: this.$t(\"otherPrompt\"),\n        placeholder: this.$t(\"placeholder\"),\n        submitText: this.$t(\"submitText\"),\n        longTextHelpText: this.$t(\"longTextHelpText\"),\n        prev: this.$t(\"prev\"),\n        next: this.$t(\"next\"),\n        percentCompleted: this.$t(\"percentCompleted\"),\n        invalidPrompt: this.$t(\"invalidPrompt\"),\n        thankYouText: this.$t(\"thankYouText\"),\n        successText: this.$t(\"successText\"),\n        ariaOk: this.$t(\"ariaOk\"),\n        ariaRequired: this.$t(\"ariaRequired\"),\n        ariaPrev: this.$t(\"ariaPrev\"),\n        ariaNext: this.$t(\"ariaNext\"),\n        ariaSubmitText: this.$t(\"ariaSubmitText\"),\n        ariaMultipleChoice: this.$t(\"ariaMultipleChoice\"),\n        ariaTypeAnswer: this.$t(\"ariaTypeAnswer\"),\n      }),\n      questions: [\n        new QuestionModel({\n          id: \"first_name\",\n          tagline: \"Hi! Welcome to our demo survey üòä\",\n          title: \"What is your first name?\",\n          type: QuestionType.Text,\n          placeholder: \"Start typing here...\",\n        }),\n        new QuestionModel({\n          id: \"email\",\n          tagline: \"Nice to meet you üëÄ, let's continue\",\n          title: \"Provide an example email.\",\n          type: QuestionType.Email,\n          placeholder: \"Start typing here...\",\n        }),\n        new QuestionModel({\n          id: \"phone\",\n          title: \"Doing great! üëç Go ahead and try with a phone number.\",\n          type: QuestionType.Phone,\n          mask: \"####-###-###\",\n        }),\n        // This is question for record\n        new QuestionModel({\n          id: \"file\",\n          title: \"Tell me about you.\",\n          type: QuestionType.File,\n          allowOther: true,\n          required: true,\n        }),\n\n        new QuestionModel({\n          id: \"place_choices\",\n          title: \"Where are you from?\",\n          type: QuestionType.MultipleChoice,\n          multiple: false,\n          helpText: \"Select your place. üëá\",\n          options: [\n            new ChoiceOption({\n              label: \"Paris\",\n            }),\n            new ChoiceOption({\n              label: \"Lodon\",\n            }),\n            new ChoiceOption({\n              label: \"Helsinki\",\n            }),\n            new ChoiceOption({\n              label: \"Berlin\",\n            }),\n          ],\n        }),\n      ],\n    };\n  },\n\n  methods: {\n    onSubmit() {\n      this.submitted = true;\n    },\n\n    onSendData() {\n      console.log(\"okeke onSendData\");\n      // Set `submitted` to true so the form knows not to allow back/forward\n      // navigation anymore.\n      // this.$refs.flowform.submit();\n      this.$refs.flowform.submitted = true;\n\n      this.submitted = true;\n\n      /* eslint-disable-next-line no-unused-vars */\n      const data = this.getData();\n      /*\n          You can use Fetch API to send the data to your server, eg.:\n\n          fetch(url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n        */\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import \"~@ditdot-dev/vue-flow-form/dist/vue-flow-form.css\";\n@import \"~@ditdot-dev/vue-flow-form/dist/vue-flow-form.theme-green.css\";\n</style>"]}]}