{"remainingRequest":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/demo-questionaire/src/components/QuestionTypes/MultipleChoiceType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/demo-questionaire/src/components/QuestionTypes/MultipleChoiceType.vue","mtime":1635747848181},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qCiAgQ29weXJpZ2h0IChjKSAyMDIwIC0gcHJlc2VudCwgRElURE9UIEx0ZC4gLSBNSVQgTGljZW5jZQogIGh0dHBzOi8vZ2l0aHViLmNvbS9kaXRkb3QtZGV2L3Z1ZS1mbG93LWZvcm0KICBodHRwczovL3d3dy5kaXRkb3QuaHIvZW4KKi8KCmltcG9ydCBCYXNlVHlwZSBmcm9tICcuL0Jhc2VUeXBlLnZ1ZScKaW1wb3J0IHsgUXVlc3Rpb25UeXBlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL1F1ZXN0aW9uTW9kZWwnCgpleHBvcnQgZGVmYXVsdCB7CiAgZXh0ZW5kczogQmFzZVR5cGUsCiAgbmFtZTogUXVlc3Rpb25UeXBlLk11bHRpcGxlQ2hvaWNlLAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdGluZ090aGVyOiBmYWxzZSwKICAgICAgaGFzSW1hZ2VzOiBmYWxzZQogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmFkZEtleUxpc3RlbmVyKCkKICB9LAoKICBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5yZW1vdmVLZXlMaXN0ZW5lcigpCiAgfSwKCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZSh2YWx1ZSkgewogICAgICBpZiAodmFsdWUpIHsKICAgICAgICB0aGlzLmFkZEtleUxpc3RlbmVyKCkKCiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb24ubXVsdGlwbGUgJiYgdGhpcy5xdWVzdGlvbi5hbnN3ZXJlZCkgewogICAgICAgICAgdGhpcy5lbnRlclByZXNzZWQgPSBmYWxzZQogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnJlbW92ZUtleUxpc3RlbmVyKCkKICAgICAgfQogICAgfQogIH0sCiAgCiAgbWV0aG9kczogewogICAgYWRkS2V5TGlzdGVuZXIoKSB7CiAgICAgIHRoaXMucmVtb3ZlS2V5TGlzdGVuZXIoKQogICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIHRoaXMub25LZXlMaXN0ZW5lcikKICAgIH0sCgogICAgcmVtb3ZlS2V5TGlzdGVuZXIoKSB7CiAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5vbktleUxpc3RlbmVyKQogICAgfSwKCiAgICAvKioKICAgICAqIExpc3RlbnMgZm9yIGtleWJvYXJkIGV2ZW50cyAoQSwgQiwgQywgLi4uKQogICAgICovCiAgICBvbktleUxpc3RlbmVyKCRldmVudCkgewogICAgICBpZiAodGhpcy5hY3RpdmUgJiYgIXRoaXMuZWRpdGluZ090aGVyICYmICRldmVudC5rZXkgJiYgJGV2ZW50LmtleS5sZW5ndGggPT09IDEpIHsKICAgICAgICBsZXQga2V5Q29kZSA9ICRldmVudC5rZXkudG9VcHBlckNhc2UoKS5jaGFyQ29kZUF0KDApCgogICAgICAgIGlmIChrZXlDb2RlID49IDY1ICYmIGtleUNvZGUgPD0gOTApIHsKICAgICAgICAgIGxldCBpbmRleCA9IGtleUNvZGUgLSA2NQoKICAgICAgICAgIGlmIChpbmRleCA+IC0xKSB7CiAgICAgICAgICAgIGxldCBvcHRpb24gPSB0aGlzLnF1ZXN0aW9uLm9wdGlvbnNbaW5kZXhdCgogICAgICAgICAgICBpZiAob3B0aW9uKSB7CiAgICAgICAgICAgICAgdGhpcy50b2dnbGVBbnN3ZXIob3B0aW9uKQogICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucXVlc3Rpb24uYWxsb3dPdGhlciAmJiBpbmRleCA9PT0gdGhpcy5xdWVzdGlvbi5vcHRpb25zLmxlbmd0aCkgewogICAgICAgICAgICAgIHRoaXMuc3RhcnRFZGl0T3RoZXIoKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIGdldExhYmVsKGluZGV4KSB7CiAgICAgIHJldHVybiB0aGlzLmxhbmd1YWdlLmFyaWFNdWx0aXBsZUNob2ljZS5yZXBsYWNlKCc6bGV0dGVyJywgdGhpcy5nZXRUb2dnbGVLZXkoaW5kZXgpKQogICAgfSwKCiAgICBnZXRUb2dnbGVLZXkoaW5kZXgpIHsKICAgICAgY29uc3Qga2V5ID0gNjUgKyBpbmRleAoKICAgICAgaWYgKGtleSA8PSA5MCkgewogICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGtleSkKICAgICAgfQoKICAgICAgcmV0dXJuICcnCiAgICB9LAoKICAgIHRvZ2dsZUFuc3dlcihvcHRpb24pIHsKICAgICAgaWYgKCF0aGlzLnF1ZXN0aW9uLm11bHRpcGxlKSB7CiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb24uYWxsb3dPdGhlcikgewogICAgICAgICAgdGhpcy5xdWVzdGlvbi5vdGhlciA9IHRoaXMuZGF0YVZhbHVlID0gbnVsbAogICAgICAgICAgdGhpcy5zZXRBbnN3ZXIodGhpcy5kYXRhVmFsdWUpCiAgICAgICAgfQoKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucXVlc3Rpb24ub3B0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgICAgbGV0IG8gPSB0aGlzLnF1ZXN0aW9uLm9wdGlvbnNbaV0KCiAgICAgICAgICBpZiAoby5zZWxlY3RlZCkgewogICAgICAgICAgICB0aGlzLl90b2dnbGVBbnN3ZXIobykKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMuX3RvZ2dsZUFuc3dlcihvcHRpb24pCiAgICB9LAoKICAgIF90b2dnbGVBbnN3ZXIob3B0aW9uKSB7CiAgICAgIGNvbnN0IG9wdGlvblZhbHVlID0gb3B0aW9uLmNob2ljZVZhbHVlKCkKCiAgICAgIG9wdGlvbi50b2dnbGUoKQoKICAgICAgaWYgKHRoaXMucXVlc3Rpb24ubXVsdGlwbGUpIHsKICAgICAgICB0aGlzLmVudGVyUHJlc3NlZCA9IGZhbHNlCgogICAgICAgIGlmICghb3B0aW9uLnNlbGVjdGVkKSB7CiAgICAgICAgICB0aGlzLl9yZW1vdmVBbnN3ZXIob3B0aW9uVmFsdWUpCiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmRhdGFWYWx1ZS5pbmRleE9mKG9wdGlvblZhbHVlKSA9PT0gLTEpIHsKICAgICAgICAgIHRoaXMuZGF0YVZhbHVlLnB1c2gob3B0aW9uVmFsdWUpCiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGF0YVZhbHVlID0gb3B0aW9uLnNlbGVjdGVkID8gb3B0aW9uVmFsdWUgOiBudWxsCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLmlzVmFsaWQoKSAmJiB0aGlzLnF1ZXN0aW9uLm5leHRTdGVwT25BbnN3ZXIgJiYgIXRoaXMucXVlc3Rpb24ubXVsdGlwbGUpIHsKICAgICAgICB0aGlzLiRlbWl0KCduZXh0JykKICAgICAgfQoKICAgICAgdGhpcy5zZXRBbnN3ZXIodGhpcy5kYXRhVmFsdWUpCiAgICB9LAoKICAgIF9yZW1vdmVBbnN3ZXIodmFsdWUpIHsKICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmRhdGFWYWx1ZS5pbmRleE9mKHZhbHVlKQoKICAgICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICAgIHRoaXMuZGF0YVZhbHVlLnNwbGljZShpbmRleCwgMSkKICAgICAgfQogICAgfSwKCiAgICBzdGFydEVkaXRPdGhlcigpIHsKICAgICAgdGhpcy5lZGl0aW5nT3RoZXIgPSB0cnVlCiAgICAgIHRoaXMuZW50ZXJQcmVzc2VkID0gZmFsc2UKCiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICB0aGlzLiRyZWZzLm90aGVySW5wdXQuZm9jdXMoKQogICAgICB9KQogICAgfSwKCiAgICBvbkNoYW5nZU90aGVyKCkgewogICAgICBpZiAodGhpcy5lZGl0aW5nT3RoZXIpIHsKICAgICAgICBsZXQKICAgICAgICAgIHZhbHVlID0gW10sCiAgICAgICAgICBzZWxmID0gdGhpcwoKICAgICAgICB0aGlzLnF1ZXN0aW9uLm9wdGlvbnMuZm9yRWFjaChmdW5jdGlvbihvcHRpb24pIHsKICAgICAgICAgIGlmIChvcHRpb24uc2VsZWN0ZWQpIHsKICAgICAgICAgICAgaWYgKHNlbGYucXVlc3Rpb24ubXVsdGlwbGUpIHsKICAgICAgICAgICAgICB2YWx1ZS5wdXNoKG9wdGlvbi5jaG9pY2VWYWx1ZSgpKQogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG9wdGlvbi50b2dnbGUoKQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkKCiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb24ub3RoZXIgJiYgdGhpcy5xdWVzdGlvbi5tdWx0aXBsZSkgewogICAgICAgICAgdmFsdWUucHVzaCh0aGlzLnF1ZXN0aW9uLm90aGVyKQogICAgICAgIH0gZWxzZSBpZiAoIXRoaXMucXVlc3Rpb24ubXVsdGlwbGUpIHsKICAgICAgICAgIHZhbHVlID0gdGhpcy5xdWVzdGlvbi5vdGhlcgogICAgICAgIH0KCiAgICAgICAgdGhpcy5kYXRhVmFsdWUgPSB2YWx1ZQogICAgICAgIHRoaXMuc2V0QW5zd2VyKHRoaXMuZGF0YVZhbHVlKQogICAgICB9CiAgICB9LAogICAgCiAgICBzdG9wRWRpdE90aGVyKCkgewogICAgICB0aGlzLmVkaXRpbmdPdGhlciA9IGZhbHNlCiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGhhc1ZhbHVlKCkgewogICAgICBpZiAodGhpcy5xdWVzdGlvbi5vcHRpb25zLmZpbHRlcihvID0+IG8uc2VsZWN0ZWQpLmxlbmd0aCkgewogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnF1ZXN0aW9uLmFsbG93T3RoZXIpIHsKICAgICAgICByZXR1cm4gdGhpcy5xdWVzdGlvbi5vdGhlciAmJiB0aGlzLnF1ZXN0aW9uLm90aGVyLnRyaW0oKS5sZW5ndGggPiAwCiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZQogICAgfQogIH0KfQo="},{"version":3,"sources":["MultipleChoiceType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"MultipleChoiceType.vue","sourceRoot":"src/components/QuestionTypes","sourcesContent":["<template>\n  <div class=\"f-radios-wrap\">\n    <ul class=\"f-radios\" v-bind:class=\"{'f-multiple': question.multiple}\" role=\"listbox\">\n      <li\n        v-for=\"(option, index) in question.options\"\n        v-on:click.prevent=\"toggleAnswer(option)\"\n        v-bind:class=\"{'f-selected': option.selected}\"\n        v-bind:key=\"'m' + index\"\n        v-bind:aria-label=\"getLabel(index)\"\n        role=\"option\"\n      >\n        <span class=\"f-image\" v-if=\"hasImages && option.imageSrc\">\n          <img v-bind:src=\"option.imageSrc\" v-bind:alt=\"option.imageAlt\">\n        </span>\n        <div class=\"f-label-wrap\">\n          <span class=\"f-key\">{{ getToggleKey(index) }}</span>\n          <span v-if=\"option.choiceLabel()\" class=\"f-label\">{{ option.choiceLabel() }}</span>\n        </div>\n      </li>\n      <li\n        class=\"f-other\"\n        v-if=\"!hasImages && question.allowOther\"\n        v-on:click.prevent=\"startEditOther\"\n        v-bind:class=\"{'f-selected': question.other, 'f-focus': editingOther}\"\n        v-bind:aria-label=\"language.ariaTypeAnswer\"\n        role=\"option\"\n      >\n        <div class=\"f-label-wrap\">\n          <span class=\"f-key\" v-if=\"!editingOther\">{{ getToggleKey(question.options.length) }}</span>\n          <input\n            v-if=\"editingOther\"\n            v-model=\"question.other\"\n            type=\"text\"\n            ref=\"otherInput\"\n            v-on:blur=\"stopEditOther\"\n            v-on:keyup.enter.prevent=\"stopEditOther\"\n            v-on:keyup=\"onChangeOther\"\n            v-on:change=\"onChangeOther\"\n            maxlength=\"256\"\n          />\n          <span v-else-if=\"question.other\" class=\"f-selected\">\n            <span class=\"f-label\">{{ question.other }}</span>\n          </span>\n          <span v-else class=\"f-label\">{{ language.otherPrompt }}</span>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: BaseType,\n    name: QuestionType.MultipleChoice,\n\n    data() {\n      return {\n        editingOther: false,\n        hasImages: false\n      }\n    },\n\n    mounted() {\n      this.addKeyListener()\n    },\n\n    beforeDestroy() {\n      this.removeKeyListener()\n    },\n\n    watch: {\n      active(value) {\n        if (value) {\n          this.addKeyListener()\n\n          if (this.question.multiple && this.question.answered) {\n            this.enterPressed = false\n          }\n        } else {\n          this.removeKeyListener()\n        }\n      }\n    },\n    \n    methods: {\n      addKeyListener() {\n        this.removeKeyListener()\n        document.addEventListener('keyup', this.onKeyListener)\n      },\n\n      removeKeyListener() {\n        document.removeEventListener('keyup', this.onKeyListener)\n      },\n\n      /**\n       * Listens for keyboard events (A, B, C, ...)\n       */\n      onKeyListener($event) {\n        if (this.active && !this.editingOther && $event.key && $event.key.length === 1) {\n          let keyCode = $event.key.toUpperCase().charCodeAt(0)\n\n          if (keyCode >= 65 && keyCode <= 90) {\n            let index = keyCode - 65\n\n            if (index > -1) {\n              let option = this.question.options[index]\n\n              if (option) {\n                this.toggleAnswer(option)\n              } else if (this.question.allowOther && index === this.question.options.length) {\n                this.startEditOther()\n              }\n            }\n          }\n        }\n      },\n\n      getLabel(index) {\n        return this.language.ariaMultipleChoice.replace(':letter', this.getToggleKey(index))\n      },\n\n      getToggleKey(index) {\n        const key = 65 + index\n\n        if (key <= 90) {\n          return String.fromCharCode(key)\n        }\n\n        return ''\n      },\n\n      toggleAnswer(option) {\n        if (!this.question.multiple) {\n          if (this.question.allowOther) {\n            this.question.other = this.dataValue = null\n            this.setAnswer(this.dataValue)\n          }\n\n          for (let i = 0; i < this.question.options.length; i++) {\n            let o = this.question.options[i]\n\n            if (o.selected) {\n              this._toggleAnswer(o)\n            }\n          }\n        }\n\n        this._toggleAnswer(option)\n      },\n\n      _toggleAnswer(option) {\n        const optionValue = option.choiceValue()\n\n        option.toggle()\n\n        if (this.question.multiple) {\n          this.enterPressed = false\n\n          if (!option.selected) {\n            this._removeAnswer(optionValue)\n          } else if (this.dataValue.indexOf(optionValue) === -1) {\n            this.dataValue.push(optionValue)\n          }\n        } else {\n          this.dataValue = option.selected ? optionValue : null\n        }\n\n        if (this.isValid() && this.question.nextStepOnAnswer && !this.question.multiple) {\n          this.$emit('next')\n        }\n\n        this.setAnswer(this.dataValue)\n      },\n\n      _removeAnswer(value) {\n        const index = this.dataValue.indexOf(value)\n\n        if (index !== -1) {\n          this.dataValue.splice(index, 1)\n        }\n      },\n\n      startEditOther() {\n        this.editingOther = true\n        this.enterPressed = false\n\n        this.$nextTick(() => {\n          this.$refs.otherInput.focus()\n        })\n      },\n\n      onChangeOther() {\n        if (this.editingOther) {\n          let\n            value = [],\n            self = this\n\n          this.question.options.forEach(function(option) {\n            if (option.selected) {\n              if (self.question.multiple) {\n                value.push(option.choiceValue())\n              } else {\n                option.toggle()\n              }\n            }\n          })\n\n          if (this.question.other && this.question.multiple) {\n            value.push(this.question.other)\n          } else if (!this.question.multiple) {\n            value = this.question.other\n          }\n\n          this.dataValue = value\n          this.setAnswer(this.dataValue)\n        }\n      },\n      \n      stopEditOther() {\n        this.editingOther = false\n      }\n    },\n\n    computed: {\n      hasValue() {\n        if (this.question.options.filter(o => o.selected).length) {\n          return true\n        }\n\n        if (this.question.allowOther) {\n          return this.question.other && this.question.other.trim().length > 0\n        }\n\n        return false\n      }\n    }\n  }\n</script>\n"]}]}