{"remainingRequest":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/demo-questionaire/src/components/QuestionTypes/TextType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/demo-questionaire/src/components/QuestionTypes/TextType.vue","mtime":1635747848183},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qCiAgQ29weXJpZ2h0IChjKSAyMDIwIC0gcHJlc2VudCwgRElURE9UIEx0ZC4gLSBNSVQgTGljZW5jZQogIGh0dHBzOi8vZ2l0aHViLmNvbS9kaXRkb3QtZGV2L3Z1ZS1mbG93LWZvcm0KICBodHRwczovL3d3dy5kaXRkb3QuaHIvZW4KKi8KCmltcG9ydCBCYXNlVHlwZSBmcm9tICcuL0Jhc2VUeXBlLnZ1ZScKaW1wb3J0IHsgUXVlc3Rpb25UeXBlIH0gZnJvbSAnLi4vLi4vbW9kZWxzL1F1ZXN0aW9uTW9kZWwnCmltcG9ydCBUaGVNYXNrIGZyb20gJ3Z1ZS10aGUtbWFzay9zcmMvY29tcG9uZW50JwoKZXhwb3J0IGRlZmF1bHQgewogIGV4dGVuZHM6IEJhc2VUeXBlLAogIG5hbWU6IFF1ZXN0aW9uVHlwZS5UZXh0LAogIGNvbXBvbmVudHM6IHsKICAgIFRoZU1hc2sKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5wdXRUeXBlOiAndGV4dCcsIAogICAgICBjYW5SZWNlaXZlRm9jdXM6IHRydWUKICAgIH0KICB9LCAKCiAgbWV0aG9kczogewogICAgdmFsaWRhdGUoKSB7CiAgICAgIGlmICh0aGlzLnF1ZXN0aW9uLm1hc2sgJiYgdGhpcy5oYXNWYWx1ZSkgewogICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMucXVlc3Rpb24ubWFzaykpIHsKICAgICAgICAgIHJldHVybiB0aGlzLnF1ZXN0aW9uLm1hc2suc29tZShtYXNrID0+IG1hc2subGVuZ3RoID09PSB0aGlzLmRhdGFWYWx1ZS5sZW5ndGgpCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdGhpcy5kYXRhVmFsdWUubGVuZ3RoID09PSB0aGlzLnF1ZXN0aW9uLm1hc2subGVuZ3RoCiAgICAgIH0KCiAgICAgIHJldHVybiAhdGhpcy5xdWVzdGlvbi5yZXF1aXJlZCB8fCB0aGlzLmhhc1ZhbHVlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["TextType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"TextType.vue","sourceRoot":"src/components/QuestionTypes","sourcesContent":["<template>\n  <span v-bind:data-placeholder=\"inputType === 'date' ? placeholder : null\">\n    <the-mask\n      v-if=\"question.mask\"\n      ref=\"input\"\n      v-bind:mask=\"question.mask\"\n      v-bind:masked=\"false\"\n      v-bind:type=\"inputType\"\n      v-bind:value=\"value\"\n      v-bind:required=\"question.required\"\n      v-on:keydown.native=\"onKeyDown\"\n      v-on:keyup.native=\"onChange\"\n      v-on:focus.native=\"setFocus\"\n      v-on:blur.native=\"unsetFocus\"\n      v-on:keyup.native.enter.prevent=\"onEnter\"\n      v-on:keyup.native.tab.prevent=\"onEnter\"\n      v-bind:placeholder=\"placeholder\"\n      v-bind:min=\"question.min\"\n      v-bind:max=\"question.max\"\n      v-on:change=\"onChange\"\n    />\n    <input\n      v-else\n      ref=\"input\"\n      v-bind:type=\"inputType\"\n      v-bind:value=\"value\"\n      v-bind:required=\"question.required\"\n      v-on:keydown=\"onKeyDown\"\n      v-on:keyup=\"onChange\"\n      v-on:keyup.enter.prevent=\"onEnter\"\n      v-on:keyup.tab.prevent=\"onEnter\"\n      v-on:focus=\"setFocus\"\n      v-on:blur=\"unsetFocus\"\n      v-bind:min=\"question.min\"\n      v-bind:max=\"question.max\"\n      v-on:change=\"onChange\"\n      v-bind:placeholder=\"placeholder\"\n    />\n  </span>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n  import TheMask from 'vue-the-mask/src/component'\n\n  export default {\n    extends: BaseType,\n    name: QuestionType.Text,\n    components: {\n      TheMask\n    },\n\n    data() {\n      return {\n        inputType: 'text', \n        canReceiveFocus: true\n      }\n    }, \n\n    methods: {\n      validate() {\n        if (this.question.mask && this.hasValue) {\n          if (Array.isArray(this.question.mask)) {\n            return this.question.mask.some(mask => mask.length === this.dataValue.length)\n          }\n\n          return this.dataValue.length === this.question.mask.length\n        }\n\n        return !this.question.required || this.hasValue\n      }\n    }\n  }\n</script>"]}]}