{"remainingRequest":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/demo-questionaire/src/components/FlowFormQuestion.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/demo-questionaire/src/components/FlowFormQuestion.vue","mtime":1635838773487},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["FlowFormQuestion.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"FlowFormQuestion.vue","sourceRoot":"src/components","sourcesContent":["// Single question template and logic\n\n<template>\n  <div class=\"vff-animate q-form\" v-bind:class=\"mainClasses\" ref=\"qanimate\">\n    <div class=\"q-inner\">\n      <div v-bind:class=\"{'f-section-wrap': question.type === QuestionType.SectionBreak}\">\n        <div v-bind:class=\"{'fh2': question.type !== QuestionType.SectionBreak}\">\n          <span class=\"f-tagline\" v-if=\"question.tagline\">{{ question.tagline }}</span>\n\n          <template v-if=\"question.title\">\n            <span class=\"fh2\" v-if=\"question.type === QuestionType.SectionBreak\">{{ question.title }}</span>\n            <span class=\"f-text\" v-else>\n              {{ question.title }}&nbsp;\n              <!-- Required questions are marked by an asterisk (*) -->\n              <span class=\"f-required\" v-if=\"question.required\" v-bind:aria-label=\"language.ariaRequired\" role=\"note\"><span aria-hidden=\"true\">*</span></span>\n\n              <span v-if=\"question.inline\" class=\"f-answer\">\n                <component\n                  ref=\"questionComponent\"\n                  v-bind:is=\"question.type\"\n                  v-bind:question=\"question\"\n                  v-bind:language=\"language\"\n                  v-model=\"dataValue\"\n                  v-bind:active=\"active\"\n                  v-on:next=\"onEnter\"\n                />\n              </span>\n            </span>\n          </template>\n\n          <span class=\"f-sub\" v-if=\"showHelperText\">\n            <span v-if=\"question.subtitle\">{{ question.subtitle }}</span>\n\n            <span class=\"f-help\" v-if=\"question.type === QuestionType.LongText && !isMobile\" v-html=\"question.helpText || language.formatString(language.longTextHelpText)\"></span>\n\n            <span class=\"f-help\" v-if=\"question.type === QuestionType.MultipleChoice && question.multiple\">{{ question.helpText || language.multipleChoiceHelpText }}</span>\n            <span class=\"f-help\" v-else-if=\"question.type === QuestionType.MultipleChoice\">{{ question.helpText || language.multipleChoiceHelpTextSingle }}</span>\n          </span>\n\n          <div v-if=\"!question.inline\" class=\"f-answer f-full-width\">\n            <component\n              ref=\"questionComponent\"\n              v-bind:is=\"question.type\"\n              v-bind:question=\"question\"\n              v-bind:language=\"language\"\n              v-model=\"dataValue\"\n              v-bind:active=\"active\"\n              v-on:next=\"onEnter\"\n            />\n          </div>\n        </div>\n        <p v-if=\"question.description || question.descriptionLink.length !== 0\" class=\"f-description\">\n          <span v-if=\"question.description\">{{ question.description }}</span>\n          <a\n            v-for=\"(link, index) in question.descriptionLink\" \n            class=\"f-link\" \n            v-bind:key=\"'m' + index\"\n            v-bind:href=\"link.url\"\n            v-bind:target=\"link.target\"\n          >{{ link.text || link.url }}</a>\n        </p>\n\n      </div>\n      <div class=\"vff-animate f-fade-in f-enter\" v-if=\"showOkButton()\">\n        <button \n          class=\"o-btn-action\"\n          type=\"button\"\n          ref=\"button\"\n          href=\"#\"\n          v-on:click.prevent=\"onEnter\"\n          v-bind:aria-label=\"language.ariaOk\"\n        >\n            <span v-if=\"question.type === QuestionType.SectionBreak\">{{ language.continue }}</span>\n            <span v-else-if=\"showSkip()\">{{ language.skip }}</span>\n            <span v-else>{{ language.ok }}</span>\n        </button>\n        <a \n          class=\"f-enter-desc\"\n          href=\"#\"\n          v-if=\"question.type !== QuestionType.LongText || !isMobile\"\n          v-on:click.prevent=\"onEnter\"\n          v-html=\"language.formatString(language.pressEnter)\">\n        </a>\n      </div>\n\n      <div v-if=\"showInvalid()\" class=\"f-invalid\" role=\"alert\" aria-live=\"assertive\">{{ language.invalidPrompt }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import LanguageModel from '../models/LanguageModel'\n  import QuestionModel, { QuestionType } from '../models/QuestionModel'\n  import FlowFormDropdownType from './QuestionTypes/DropdownType.vue'\n  import FlowFormEmailType from './QuestionTypes/EmailType.vue'\n  import FlowFormLongTextType from './QuestionTypes/LongTextType.vue'\n  import FlowFormMultipleChoiceType from './QuestionTypes/MultipleChoiceType.vue'\n  import FlowFormMultiplePictureChoiceType from './QuestionTypes/MultiplePictureChoiceType.vue'\n  import FlowFormNumberType from './QuestionTypes/NumberType.vue'\n  import FlowFormPasswordType from './QuestionTypes/PasswordType.vue'\n  import FlowFormPhoneType from './QuestionTypes/PhoneType.vue'\n  import FlowFormSectionBreakType from './QuestionTypes/SectionBreakType.vue'\n  import FlowFormTextType from './QuestionTypes/TextType.vue'\n  import FlowFormUrlType from './QuestionTypes/UrlType.vue'\n  import FlowFormDateType from './QuestionTypes/DateType.vue'\n  import FlowFormFileType from './QuestionTypes/FileType.vue'\n  import { IsMobile } from '../mixins/IsMobile'\n  \n\n  export default {\n    name: 'FlowFormQuestion',\n    components: {\n      FlowFormDateType,\n      FlowFormDropdownType,\n      FlowFormEmailType,\n      FlowFormLongTextType,\n      FlowFormMultipleChoiceType,\n      FlowFormMultiplePictureChoiceType,\n      FlowFormNumberType,\n      FlowFormPasswordType,\n      FlowFormPhoneType,\n      FlowFormSectionBreakType,\n      FlowFormTextType,\n      FlowFormUrlType,\n      FlowFormFileType,\n    },\n    props: {\n      question: QuestionModel,\n      language: LanguageModel,\n      value: [String, Array, Boolean, Number, Object, FileList],\n      active: {\n        type: Boolean,\n        default: false\n      },\n      reverse: {\n        type: Boolean,\n        default: false\n      }\n    },\n    mixins: [\n      IsMobile\n    ],\n    data() {\n      return {\n        QuestionType: QuestionType,\n        dataValue: null,\n        debounced: false\n      }\n    },\n    mounted() {\n      this.focusField()\n      this.dataValue = this.question.answer\n\n      this.$refs.qanimate.addEventListener('animationend', this.onAnimationEnd)\n    },\n    beforeDestroy() {\n      this.$refs.qanimate.removeEventListener('animationend', this.onAnimationEnd)\n    },\n    methods: {\n      /**\n       * Autofocus the input box of the current question\n       */\n      focusField() {\n        const el = this.$refs.questionComponent\n        \n        el && el.focus()\n      },\n\n      onAnimationEnd() {\n        this.focusField()\n      },\n\n      shouldFocus() {\n        const q = this.$refs.questionComponent\n\n        return q && q.canReceiveFocus && !q.focused\n      },\n\n      returnFocus() {\n\n        if (this.shouldFocus()) {\n          this.focusField()\n        }\n      },\n\n      /**\n       * Emits \"answer\" event and calls \"onEnter\" method on Enter press\n       */ \n      onEnter() {\n        this.checkAnswer(this.emitAnswer)\n      },\n\n      onTab() {\n        this.checkAnswer(this.emitAnswerTab)\n      },\n\n      checkAnswer(fn) {\n        const q = this.$refs.questionComponent\n\n        if (q.isValid() && this.question.nextStepOnAnswer && !this.question.multiple) {\n          this.debounce(() => fn(q), 350)\n        } else {\n          fn(q)\n        }\n      },\n\n      emitAnswer(q) {\n        if (q) {\n          if (!q.focused) {\n            this.$emit('answer', q)\n          }\n\n          q.onEnter()\n        }\n      },\n\n      emitAnswerTab(q) {\n        if (q && this.question.type !== QuestionType.Date) {\n          this.returnFocus()\n          this.$emit('answer', q)\n          \n          q.onEnter()\n        }\n      },\n\n      debounce(fn, delay) {\n        let debounceTimer\n        this.debounced = true\n      \n        return (() => {\n          clearTimeout(debounceTimer)\n          debounceTimer = setTimeout(fn, delay)\n        })()\n      },\n      \n      /**\n       * Check if the \"OK\" button should be shown.\n       */\n      showOkButton() {\n        const q = this.$refs.questionComponent\n\n        if (this.question.type === QuestionType.SectionBreak) {\n          return this.active\n        }\n\n        if (!this.question.required) {\n          return true\n        }\n\n        if (this.question.allowOther && this.question.other) {\n          return true\n        }\n\n        if (QuestionType.MultipleChoice && !this.question.multiple && this.question.nextStepOnAnswer) {\n          return false\n        }\n      \n        // If there is no question referenced, or dataValue is still set to its default (null).\n        // This allows a ChoiceOption value of false, but will not allow you to use null as a value.\n        if (!q || this.dataValue === null) {\n          return false\n        }\n\n        return q.hasValue && q.isValid()\n      },\n\n      showSkip() {\n        const q = this.$refs.questionComponent\n\n        // We might not have a reference to the question component at first\n        // but we know that if we don't, it's definitely empty\n        return !this.question.required && (!q || !q.hasValue)\n      },\n\n      /**\n       * Determins if the invalid message should be shown.\n       */\n      showInvalid() {\n        const q = this.$refs.questionComponent\n\n        if (!q || this.dataValue === null) {\n          return false\n        }\n\n        return q.showInvalid()\n      }\n    },\n    computed: {\n      mainClasses: {\n        cache: false,\n        get() {\n          const classes = {\n            'q-is-active': this.active,\n            'q-is-inactive': !this.active,\n            'f-fade-in-down': this.reverse,\n            'f-fade-in-up': !this.reverse,\n            'f-focused': this.$refs.questionComponent && this.$refs.questionComponent.focused,\n            'f-has-value': this.$refs.questionComponent && this.$refs.questionComponent.hasValue\n          }\n\n          classes['field-' + this.question.type.toLowerCase().substring(8, this.question.type.length - 4)] = true\n\n          return classes\n        }\n      },\n\n      showHelperText() {\n        if (this.question.subtitle) {\n          return true\n        }\n\n        if (this.question.type === QuestionType.LongText || this.question.type === QuestionType.MultipleChoice) {\n          return this.question.helpTextShow\n        }\n\n        return false\n      }\n    }\n  }\n</script>\n"]}]}