{"remainingRequest":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-the-mask/src/component.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-the-mask/src/component.vue","mtime":1634035956901},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBtYXNrIGZyb20gJy4vZGlyZWN0aXZlJwppbXBvcnQgdG9rZW5zIGZyb20gJy4vdG9rZW5zJwppbXBvcnQgbWFza2VyIGZyb20gJy4vbWFza2VyJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdUaGVNYXNrJywKICBwcm9wczogewogICAgdmFsdWU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICBtYXNrOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIEFycmF5XSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBtYXNrZWQ6IHsgLy8gYnkgZGVmYXVsdCBlbWl0cyB0aGUgdmFsdWUgdW5mb3JtYXR0ZWQsIGNoYW5nZSB0byB0cnVlIHRvIGZvcm1hdCB3aXRoIHRoZSBtYXNrCiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlIC8vIHJhdwogICAgfSwKICAgIHRva2VuczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHRva2VucwogICAgfQogIH0sCiAgZGlyZWN0aXZlczoge21hc2t9LAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgbGFzdFZhbHVlOiBudWxsLCAvLyBhdm9pZCB1bmVjZXNzYXJ5IGVtaXQgd2hlbiBoYXMgbm8gY2hhbmdlCiAgICAgIGRpc3BsYXk6IHRoaXMudmFsdWUKICAgIH0KICB9LAogIHdhdGNoIDogewogICAgdmFsdWUgKG5ld1ZhbHVlKSB7CiAgICAgIGlmIChuZXdWYWx1ZSAhPT0gdGhpcy5sYXN0VmFsdWUpIHsKICAgICAgICB0aGlzLmRpc3BsYXkgPSBuZXdWYWx1ZQogICAgICB9CiAgICB9LAogICAgbWFza2VkICgpIHsKICAgICAgdGhpcy5yZWZyZXNoKHRoaXMuZGlzcGxheSkKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBjb25maWcgKCkgewogICAgICByZXR1cm4gewogICAgICAgIG1hc2s6IHRoaXMubWFzaywKICAgICAgICB0b2tlbnM6IHRoaXMudG9rZW5zLAogICAgICAgIG1hc2tlZDogdGhpcy5tYXNrZWQKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25JbnB1dCAoZSkgewogICAgICBpZiAoZS5pc1RydXN0ZWQpIHJldHVybiAvLyBpZ25vcmUgbmF0aXZlIGV2ZW50CiAgICAgIHRoaXMucmVmcmVzaChlLnRhcmdldC52YWx1ZSkKICAgIH0sCgogICAgcmVmcmVzaCAodmFsdWUpIHsKICAgICAgdGhpcy5kaXNwbGF5ID0gdmFsdWUKICAgICAgdmFyIHZhbHVlID0gbWFza2VyKHZhbHVlLCB0aGlzLm1hc2ssIHRoaXMubWFza2VkLCB0aGlzLnRva2VucykKICAgICAgaWYgKHZhbHVlICE9PSB0aGlzLmxhc3RWYWx1ZSkgewogICAgICAgIHRoaXMubGFzdFZhbHVlID0gdmFsdWUKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbHVlKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["component.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"component.vue","sourceRoot":"node_modules/vue-the-mask/src","sourcesContent":["<template>\n<input type=\"text\" v-mask=\"config\" :value=\"display\" @input=\"onInput\" />\n</template>\n\n<script>\nimport mask from './directive'\nimport tokens from './tokens'\nimport masker from './masker'\n\nexport default {\n  name: 'TheMask',\n  props: {\n    value: [String, Number],\n    mask: {\n      type: [String, Array],\n      required: true\n    },\n    masked: { // by default emits the value unformatted, change to true to format with the mask\n      type: Boolean,\n      default: false // raw\n    },\n    tokens: {\n      type: Object,\n      default: () => tokens\n    }\n  },\n  directives: {mask},\n  data () {\n    return {\n      lastValue: null, // avoid unecessary emit when has no change\n      display: this.value\n    }\n  },\n  watch : {\n    value (newValue) {\n      if (newValue !== this.lastValue) {\n        this.display = newValue\n      }\n    },\n    masked () {\n      this.refresh(this.display)\n    }\n  },\n  computed: {\n    config () {\n      return {\n        mask: this.mask,\n        tokens: this.tokens,\n        masked: this.masked\n      }\n    }\n  },\n  methods: {\n    onInput (e) {\n      if (e.isTrusted) return // ignore native event\n      this.refresh(e.target.value)\n    },\n\n    refresh (value) {\n      this.display = value\n      var value = masker(value, this.mask, this.masked, this.tokens)\n      if (value !== this.lastValue) {\n        this.lastValue = value\n        this.$emit('input', value)\n      }\n    }\n  }\n}\n</script>\n"]}]}