{"remainingRequest":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/babel-loader/lib/index.js!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/src/components/QuestionTypes/MultipleChoiceType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/src/components/QuestionTypes/MultipleChoiceType.vue","mtime":1635747848181},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNwbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovKgogIENvcHlyaWdodCAoYykgMjAyMCAtIHByZXNlbnQsIERJVERPVCBMdGQuIC0gTUlUIExpY2VuY2UKICBodHRwczovL2dpdGh1Yi5jb20vZGl0ZG90LWRldi92dWUtZmxvdy1mb3JtCiAgaHR0cHM6Ly93d3cuZGl0ZG90LmhyL2VuCiovCmltcG9ydCBCYXNlVHlwZSBmcm9tICcuL0Jhc2VUeXBlLnZ1ZSc7CmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gJy4uLy4uL21vZGVscy9RdWVzdGlvbk1vZGVsJzsKZXhwb3J0IGRlZmF1bHQgewogIGV4dGVuZHM6IEJhc2VUeXBlLAogIG5hbWU6IFF1ZXN0aW9uVHlwZS5NdWx0aXBsZUNob2ljZSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZWRpdGluZ090aGVyOiBmYWxzZSwKICAgICAgaGFzSW1hZ2VzOiBmYWxzZQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmFkZEtleUxpc3RlbmVyKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5yZW1vdmVLZXlMaXN0ZW5lcigpOwogIH0sCiAgd2F0Y2g6IHsKICAgIGFjdGl2ZTogZnVuY3Rpb24gYWN0aXZlKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSkgewogICAgICAgIHRoaXMuYWRkS2V5TGlzdGVuZXIoKTsKCiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb24ubXVsdGlwbGUgJiYgdGhpcy5xdWVzdGlvbi5hbnN3ZXJlZCkgewogICAgICAgICAgdGhpcy5lbnRlclByZXNzZWQgPSBmYWxzZTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yZW1vdmVLZXlMaXN0ZW5lcigpOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGRLZXlMaXN0ZW5lcjogZnVuY3Rpb24gYWRkS2V5TGlzdGVuZXIoKSB7CiAgICAgIHRoaXMucmVtb3ZlS2V5TGlzdGVuZXIoKTsKICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLm9uS2V5TGlzdGVuZXIpOwogICAgfSwKICAgIHJlbW92ZUtleUxpc3RlbmVyOiBmdW5jdGlvbiByZW1vdmVLZXlMaXN0ZW5lcigpIHsKICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5dXAnLCB0aGlzLm9uS2V5TGlzdGVuZXIpOwogICAgfSwKCiAgICAvKioKICAgICAqIExpc3RlbnMgZm9yIGtleWJvYXJkIGV2ZW50cyAoQSwgQiwgQywgLi4uKQogICAgICovCiAgICBvbktleUxpc3RlbmVyOiBmdW5jdGlvbiBvbktleUxpc3RlbmVyKCRldmVudCkgewogICAgICBpZiAodGhpcy5hY3RpdmUgJiYgIXRoaXMuZWRpdGluZ090aGVyICYmICRldmVudC5rZXkgJiYgJGV2ZW50LmtleS5sZW5ndGggPT09IDEpIHsKICAgICAgICB2YXIga2V5Q29kZSA9ICRldmVudC5rZXkudG9VcHBlckNhc2UoKS5jaGFyQ29kZUF0KDApOwoKICAgICAgICBpZiAoa2V5Q29kZSA+PSA2NSAmJiBrZXlDb2RlIDw9IDkwKSB7CiAgICAgICAgICB2YXIgaW5kZXggPSBrZXlDb2RlIC0gNjU7CgogICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICAgICAgdmFyIG9wdGlvbiA9IHRoaXMucXVlc3Rpb24ub3B0aW9uc1tpbmRleF07CgogICAgICAgICAgICBpZiAob3B0aW9uKSB7CiAgICAgICAgICAgICAgdGhpcy50b2dnbGVBbnN3ZXIob3B0aW9uKTsKICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnF1ZXN0aW9uLmFsbG93T3RoZXIgJiYgaW5kZXggPT09IHRoaXMucXVlc3Rpb24ub3B0aW9ucy5sZW5ndGgpIHsKICAgICAgICAgICAgICB0aGlzLnN0YXJ0RWRpdE90aGVyKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBnZXRMYWJlbDogZnVuY3Rpb24gZ2V0TGFiZWwoaW5kZXgpIHsKICAgICAgcmV0dXJuIHRoaXMubGFuZ3VhZ2UuYXJpYU11bHRpcGxlQ2hvaWNlLnJlcGxhY2UoJzpsZXR0ZXInLCB0aGlzLmdldFRvZ2dsZUtleShpbmRleCkpOwogICAgfSwKICAgIGdldFRvZ2dsZUtleTogZnVuY3Rpb24gZ2V0VG9nZ2xlS2V5KGluZGV4KSB7CiAgICAgIHZhciBrZXkgPSA2NSArIGluZGV4OwoKICAgICAgaWYgKGtleSA8PSA5MCkgewogICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGtleSk7CiAgICAgIH0KCiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICB0b2dnbGVBbnN3ZXI6IGZ1bmN0aW9uIHRvZ2dsZUFuc3dlcihvcHRpb24pIHsKICAgICAgaWYgKCF0aGlzLnF1ZXN0aW9uLm11bHRpcGxlKSB7CiAgICAgICAgaWYgKHRoaXMucXVlc3Rpb24uYWxsb3dPdGhlcikgewogICAgICAgICAgdGhpcy5xdWVzdGlvbi5vdGhlciA9IHRoaXMuZGF0YVZhbHVlID0gbnVsbDsKICAgICAgICAgIHRoaXMuc2V0QW5zd2VyKHRoaXMuZGF0YVZhbHVlKTsKICAgICAgICB9CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5xdWVzdGlvbi5vcHRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIgbyA9IHRoaXMucXVlc3Rpb24ub3B0aW9uc1tpXTsKCiAgICAgICAgICBpZiAoby5zZWxlY3RlZCkgewogICAgICAgICAgICB0aGlzLl90b2dnbGVBbnN3ZXIobyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICB0aGlzLl90b2dnbGVBbnN3ZXIob3B0aW9uKTsKICAgIH0sCiAgICBfdG9nZ2xlQW5zd2VyOiBmdW5jdGlvbiBfdG9nZ2xlQW5zd2VyKG9wdGlvbikgewogICAgICB2YXIgb3B0aW9uVmFsdWUgPSBvcHRpb24uY2hvaWNlVmFsdWUoKTsKICAgICAgb3B0aW9uLnRvZ2dsZSgpOwoKICAgICAgaWYgKHRoaXMucXVlc3Rpb24ubXVsdGlwbGUpIHsKICAgICAgICB0aGlzLmVudGVyUHJlc3NlZCA9IGZhbHNlOwoKICAgICAgICBpZiAoIW9wdGlvbi5zZWxlY3RlZCkgewogICAgICAgICAgdGhpcy5fcmVtb3ZlQW5zd2VyKG9wdGlvblZhbHVlKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuZGF0YVZhbHVlLmluZGV4T2Yob3B0aW9uVmFsdWUpID09PSAtMSkgewogICAgICAgICAgdGhpcy5kYXRhVmFsdWUucHVzaChvcHRpb25WYWx1ZSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGF0YVZhbHVlID0gb3B0aW9uLnNlbGVjdGVkID8gb3B0aW9uVmFsdWUgOiBudWxsOwogICAgICB9CgogICAgICBpZiAodGhpcy5pc1ZhbGlkKCkgJiYgdGhpcy5xdWVzdGlvbi5uZXh0U3RlcE9uQW5zd2VyICYmICF0aGlzLnF1ZXN0aW9uLm11bHRpcGxlKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnbmV4dCcpOwogICAgICB9CgogICAgICB0aGlzLnNldEFuc3dlcih0aGlzLmRhdGFWYWx1ZSk7CiAgICB9LAogICAgX3JlbW92ZUFuc3dlcjogZnVuY3Rpb24gX3JlbW92ZUFuc3dlcih2YWx1ZSkgewogICAgICB2YXIgaW5kZXggPSB0aGlzLmRhdGFWYWx1ZS5pbmRleE9mKHZhbHVlKTsKCiAgICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgICB0aGlzLmRhdGFWYWx1ZS5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB9CiAgICB9LAogICAgc3RhcnRFZGl0T3RoZXI6IGZ1bmN0aW9uIHN0YXJ0RWRpdE90aGVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5lZGl0aW5nT3RoZXIgPSB0cnVlOwogICAgICB0aGlzLmVudGVyUHJlc3NlZCA9IGZhbHNlOwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJHJlZnMub3RoZXJJbnB1dC5mb2N1cygpOwogICAgICB9KTsKICAgIH0sCiAgICBvbkNoYW5nZU90aGVyOiBmdW5jdGlvbiBvbkNoYW5nZU90aGVyKCkgewogICAgICBpZiAodGhpcy5lZGl0aW5nT3RoZXIpIHsKICAgICAgICB2YXIgdmFsdWUgPSBbXSwKICAgICAgICAgICAgc2VsZiA9IHRoaXM7CiAgICAgICAgdGhpcy5xdWVzdGlvbi5vcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKG9wdGlvbikgewogICAgICAgICAgaWYgKG9wdGlvbi5zZWxlY3RlZCkgewogICAgICAgICAgICBpZiAoc2VsZi5xdWVzdGlvbi5tdWx0aXBsZSkgewogICAgICAgICAgICAgIHZhbHVlLnB1c2gob3B0aW9uLmNob2ljZVZhbHVlKCkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIG9wdGlvbi50b2dnbGUoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBpZiAodGhpcy5xdWVzdGlvbi5vdGhlciAmJiB0aGlzLnF1ZXN0aW9uLm11bHRpcGxlKSB7CiAgICAgICAgICB2YWx1ZS5wdXNoKHRoaXMucXVlc3Rpb24ub3RoZXIpOwogICAgICAgIH0gZWxzZSBpZiAoIXRoaXMucXVlc3Rpb24ubXVsdGlwbGUpIHsKICAgICAgICAgIHZhbHVlID0gdGhpcy5xdWVzdGlvbi5vdGhlcjsKICAgICAgICB9CgogICAgICAgIHRoaXMuZGF0YVZhbHVlID0gdmFsdWU7CiAgICAgICAgdGhpcy5zZXRBbnN3ZXIodGhpcy5kYXRhVmFsdWUpOwogICAgICB9CiAgICB9LAogICAgc3RvcEVkaXRPdGhlcjogZnVuY3Rpb24gc3RvcEVkaXRPdGhlcigpIHsKICAgICAgdGhpcy5lZGl0aW5nT3RoZXIgPSBmYWxzZTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBoYXNWYWx1ZTogZnVuY3Rpb24gaGFzVmFsdWUoKSB7CiAgICAgIGlmICh0aGlzLnF1ZXN0aW9uLm9wdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChvKSB7CiAgICAgICAgcmV0dXJuIG8uc2VsZWN0ZWQ7CiAgICAgIH0pLmxlbmd0aCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICBpZiAodGhpcy5xdWVzdGlvbi5hbGxvd090aGVyKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucXVlc3Rpb24ub3RoZXIgJiYgdGhpcy5xdWVzdGlvbi5vdGhlci50cmltKCkubGVuZ3RoID4gMDsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogIH0KfTs="},{"version":3,"sources":["MultipleChoiceType.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"f-radios-wrap\">\n    <ul class=\"f-radios\" v-bind:class=\"{'f-multiple': question.multiple}\" role=\"listbox\">\n      <li\n        v-for=\"(option, index) in question.options\"\n        v-on:click.prevent=\"toggleAnswer(option)\"\n        v-bind:class=\"{'f-selected': option.selected}\"\n        v-bind:key=\"'m' + index\"\n        v-bind:aria-label=\"getLabel(index)\"\n        role=\"option\"\n      >\n        <span class=\"f-image\" v-if=\"hasImages && option.imageSrc\">\n          <img v-bind:src=\"option.imageSrc\" v-bind:alt=\"option.imageAlt\">\n        </span>\n        <div class=\"f-label-wrap\">\n          <span class=\"f-key\">{{ getToggleKey(index) }}</span>\n          <span v-if=\"option.choiceLabel()\" class=\"f-label\">{{ option.choiceLabel() }}</span>\n        </div>\n      </li>\n      <li\n        class=\"f-other\"\n        v-if=\"!hasImages && question.allowOther\"\n        v-on:click.prevent=\"startEditOther\"\n        v-bind:class=\"{'f-selected': question.other, 'f-focus': editingOther}\"\n        v-bind:aria-label=\"language.ariaTypeAnswer\"\n        role=\"option\"\n      >\n        <div class=\"f-label-wrap\">\n          <span class=\"f-key\" v-if=\"!editingOther\">{{ getToggleKey(question.options.length) }}</span>\n          <input\n            v-if=\"editingOther\"\n            v-model=\"question.other\"\n            type=\"text\"\n            ref=\"otherInput\"\n            v-on:blur=\"stopEditOther\"\n            v-on:keyup.enter.prevent=\"stopEditOther\"\n            v-on:keyup=\"onChangeOther\"\n            v-on:change=\"onChangeOther\"\n            maxlength=\"256\"\n          />\n          <span v-else-if=\"question.other\" class=\"f-selected\">\n            <span class=\"f-label\">{{ question.other }}</span>\n          </span>\n          <span v-else class=\"f-label\">{{ language.otherPrompt }}</span>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n  /*\n    Copyright (c) 2020 - present, DITDOT Ltd. - MIT Licence\n    https://github.com/ditdot-dev/vue-flow-form\n    https://www.ditdot.hr/en\n  */\n\n  import BaseType from './BaseType.vue'\n  import { QuestionType } from '../../models/QuestionModel'\n\n  export default {\n    extends: BaseType,\n    name: QuestionType.MultipleChoice,\n\n    data() {\n      return {\n        editingOther: false,\n        hasImages: false\n      }\n    },\n\n    mounted() {\n      this.addKeyListener()\n    },\n\n    beforeDestroy() {\n      this.removeKeyListener()\n    },\n\n    watch: {\n      active(value) {\n        if (value) {\n          this.addKeyListener()\n\n          if (this.question.multiple && this.question.answered) {\n            this.enterPressed = false\n          }\n        } else {\n          this.removeKeyListener()\n        }\n      }\n    },\n    \n    methods: {\n      addKeyListener() {\n        this.removeKeyListener()\n        document.addEventListener('keyup', this.onKeyListener)\n      },\n\n      removeKeyListener() {\n        document.removeEventListener('keyup', this.onKeyListener)\n      },\n\n      /**\n       * Listens for keyboard events (A, B, C, ...)\n       */\n      onKeyListener($event) {\n        if (this.active && !this.editingOther && $event.key && $event.key.length === 1) {\n          let keyCode = $event.key.toUpperCase().charCodeAt(0)\n\n          if (keyCode >= 65 && keyCode <= 90) {\n            let index = keyCode - 65\n\n            if (index > -1) {\n              let option = this.question.options[index]\n\n              if (option) {\n                this.toggleAnswer(option)\n              } else if (this.question.allowOther && index === this.question.options.length) {\n                this.startEditOther()\n              }\n            }\n          }\n        }\n      },\n\n      getLabel(index) {\n        return this.language.ariaMultipleChoice.replace(':letter', this.getToggleKey(index))\n      },\n\n      getToggleKey(index) {\n        const key = 65 + index\n\n        if (key <= 90) {\n          return String.fromCharCode(key)\n        }\n\n        return ''\n      },\n\n      toggleAnswer(option) {\n        if (!this.question.multiple) {\n          if (this.question.allowOther) {\n            this.question.other = this.dataValue = null\n            this.setAnswer(this.dataValue)\n          }\n\n          for (let i = 0; i < this.question.options.length; i++) {\n            let o = this.question.options[i]\n\n            if (o.selected) {\n              this._toggleAnswer(o)\n            }\n          }\n        }\n\n        this._toggleAnswer(option)\n      },\n\n      _toggleAnswer(option) {\n        const optionValue = option.choiceValue()\n\n        option.toggle()\n\n        if (this.question.multiple) {\n          this.enterPressed = false\n\n          if (!option.selected) {\n            this._removeAnswer(optionValue)\n          } else if (this.dataValue.indexOf(optionValue) === -1) {\n            this.dataValue.push(optionValue)\n          }\n        } else {\n          this.dataValue = option.selected ? optionValue : null\n        }\n\n        if (this.isValid() && this.question.nextStepOnAnswer && !this.question.multiple) {\n          this.$emit('next')\n        }\n\n        this.setAnswer(this.dataValue)\n      },\n\n      _removeAnswer(value) {\n        const index = this.dataValue.indexOf(value)\n\n        if (index !== -1) {\n          this.dataValue.splice(index, 1)\n        }\n      },\n\n      startEditOther() {\n        this.editingOther = true\n        this.enterPressed = false\n\n        this.$nextTick(() => {\n          this.$refs.otherInput.focus()\n        })\n      },\n\n      onChangeOther() {\n        if (this.editingOther) {\n          let\n            value = [],\n            self = this\n\n          this.question.options.forEach(function(option) {\n            if (option.selected) {\n              if (self.question.multiple) {\n                value.push(option.choiceValue())\n              } else {\n                option.toggle()\n              }\n            }\n          })\n\n          if (this.question.other && this.question.multiple) {\n            value.push(this.question.other)\n          } else if (!this.question.multiple) {\n            value = this.question.other\n          }\n\n          this.dataValue = value\n          this.setAnswer(this.dataValue)\n        }\n      },\n      \n      stopEditOther() {\n        this.editingOther = false\n      }\n    },\n\n    computed: {\n      hasValue() {\n        if (this.question.options.filter(o => o.selected).length) {\n          return true\n        }\n\n        if (this.question.allowOther) {\n          return this.question.other && this.question.other.trim().length > 0\n        }\n\n        return false\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components/QuestionTypes"}]}