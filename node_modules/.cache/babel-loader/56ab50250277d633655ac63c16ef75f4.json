{"remainingRequest":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js!/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/demo-questionaire/src/components/QuestionTypes/FileType.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/demo-questionaire/src/components/QuestionTypes/FileType.vue","mtime":1635838773487},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsLXNlYXJjaC1wYXJhbXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBCYXNlVHlwZSBmcm9tICIuL0Jhc2VUeXBlLnZ1ZSI7CmltcG9ydCB7IFF1ZXN0aW9uVHlwZSB9IGZyb20gIi4uLy4uL21vZGVscy9RdWVzdGlvbk1vZGVsIjsKaW1wb3J0IE9wdXNNZWRpYVJlY29yZGVyIGZyb20gIm9wdXMtbWVkaWEtcmVjb3JkZXIiOyAvLyBVc2Ugd29ya2VyLWxvYWRlcgoKaW1wb3J0IEVuY29kZXJXb3JrZXIgZnJvbSAid29ya2VyLWxvYWRlciFvcHVzLW1lZGlhLXJlY29yZGVyL2VuY29kZXJXb3JrZXIuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgZXh0ZW5kczogQmFzZVR5cGUsCiAgbmFtZTogUXVlc3Rpb25UeXBlLkZpbGUsCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlY29yZGluZzogZmFsc2UsCiAgICAgIHJlY29yZGVyOiBudWxsCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLnF1ZXN0aW9uLmFjY2VwdCkgewogICAgICB0aGlzLm1pbWVUeXBlUmVnZXggPSBuZXcgUmVnRXhwKHRoaXMucXVlc3Rpb24uYWNjZXB0LnJlcGxhY2UoIioiLCAiW15cXC8sXSsiKSk7CiAgICB9CiAgfSwKICBiZWZvcmVDcmVhdGU6IGZ1bmN0aW9uIGJlZm9yZUNyZWF0ZSgpIHsKICAgIC8vIENoZWNrIGlmIE1lZGlhUmVjb3JkZXIgYXZhaWxhYmxlLgogICAgaWYgKCF3aW5kb3cuTWVkaWFSZWNvcmRlcikgewogICAgICB3aW5kb3cuTWVkaWFSZWNvcmRlciA9IE9wdXNNZWRpYVJlY29yZGVyOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKCkgewogICAgICB0aGlzLmRpcnR5ID0gdHJ1ZTsKICAgICAgdGhpcy5kYXRhVmFsdWUgPSB0aGlzLmZpbGVzOwogICAgICB0aGlzLm9uS2V5RG93bigpOwogICAgfSwKICAgIG9uUmVzdWx0OiBmdW5jdGlvbiBvblJlc3VsdChkYXRhKSB7CiAgICAgIHRoaXMuZGlydHkgPSB0cnVlOwogICAgICB0aGlzLmRhdGFWYWx1ZSA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpOwogICAgICB0aGlzLiRyZWZzLmF1ZGlvUmVmLnNyYyA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGRhdGEpOwogICAgICB0aGlzLmhhbmRsZVNhdmVGaWxlKGRhdGEpOwogICAgfSwKICAgIGhhbmRsZVNhdmVGaWxlOiBmdW5jdGlvbiBoYW5kbGVTYXZlRmlsZShkYXRhKSB7CiAgICAgIC8vIEJlZ2luIGhhbmRsZSBjcmVhdGUgZmlsZSB0byBkb3dubG9hZAogICAgICB2YXIgZmlsZVVSTCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKG5ldyBCbG9iKFtkYXRhXSkpOwogICAgICB2YXIgZmlsZUxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgIGZpbGVMaW5rLmhyZWYgPSBmaWxlVVJMOwogICAgICB2YXIgbXlkYXRlID0gbmV3IERhdGUoKTsKICAgICAgdmFyIGN1cnJfZGF0ZSA9ICgiMCIgKyBteWRhdGUuZ2V0RGF0ZSgpKS5zbGljZSgtMik7CiAgICAgIHZhciBjdXJyX21vbnRoID0gKCIwIiArIChteWRhdGUuZ2V0TW9udGgoKSArIDEpKS5zbGljZSgtMik7CiAgICAgIHZhciBjdXJyX3llYXIgPSBteWRhdGUuZ2V0RnVsbFllYXIoKTsKICAgICAgdmFyIGN1cnJfaG91ciA9IG15ZGF0ZS5nZXRIb3VycygpOwogICAgICB2YXIgY3Vycl9taW51dGUgPSBteWRhdGUuZ2V0TWludXRlcygpOwogICAgICB2YXIgY3Vycl9zZWNvbmRzID0gbXlkYXRlLmdldFNlY29uZHMoKTsKICAgICAgdmFyIGZpbGVOYW1lID0gIiIuY29uY2F0KGN1cnJfeWVhcikuY29uY2F0KGN1cnJfbW9udGgpLmNvbmNhdChjdXJyX2RhdGUsICJfIikuY29uY2F0KGN1cnJfaG91cikuY29uY2F0KGN1cnJfbWludXRlKS5jb25jYXQoY3Vycl9zZWNvbmRzLCAiX3JlY29yZC53YXYiKTsKICAgICAgZmlsZUxpbmsuc2V0QXR0cmlidXRlKCJkb3dubG9hZCIsIGZpbGVOYW1lKTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChmaWxlTGluayk7CiAgICAgIGZpbGVMaW5rLmNsaWNrKCk7IC8vIFNhdmUgZmlsZSB0byBsb2NhbAogICAgfSwKICAgIGhhbmRsZVJlY29yZFNhZmFyaTogZnVuY3Rpb24gaGFuZGxlUmVjb3JkU2FmYXJpKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5yZWNvcmRpbmcgPSAhdGhpcy5yZWNvcmRpbmc7CgogICAgICBpZiAodGhpcy5yZWNvcmRpbmcpIHsKICAgICAgICBjb25zb2xlLmxvZygiQmVnaW4gUmVjb3JkaW5nIik7IC8vIE5vbi1zdGFuZGFyZCBvcHRpb25zCgogICAgICAgIHZhciB3b3JrZXJPcHRpb25zID0gewogICAgICAgICAgZW5jb2RlcldvcmtlckZhY3Rvcnk6IGZ1bmN0aW9uIGVuY29kZXJXb3JrZXJGYWN0b3J5KCkgewogICAgICAgICAgICByZXR1cm4gbmV3IEVuY29kZXJXb3JrZXIoKTsKICAgICAgICAgIH0sCiAgICAgICAgICBPZ2dPcHVzRW5jb2Rlcldhc21QYXRoOiAiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9vcHVzLW1lZGlhLXJlY29yZGVyQGxhdGVzdC9PZ2dPcHVzRW5jb2Rlci53YXNtIiwKICAgICAgICAgIFdlYk1PcHVzRW5jb2Rlcldhc21QYXRoOiAiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9vcHVzLW1lZGlhLXJlY29yZGVyQGxhdGVzdC9XZWJNT3B1c0VuY29kZXIud2FzbSIKICAgICAgICB9OwogICAgICAgIG5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhKHsKICAgICAgICAgIGF1ZGlvOiB0cnVlCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAoc3RyZWFtKSB7CiAgICAgICAgICAvLyBTdGFydCByZWNvcmRpbmcKICAgICAgICAgIF90aGlzLnJlY29yZGVyID0gbmV3IE1lZGlhUmVjb3JkZXIoc3RyZWFtLCB7fSwgd29ya2VyT3B0aW9ucyk7IC8vIFNldCByZWNvcmQgdG8gPGF1ZGlvPiB3aGVuIHJlY29yZGluZyB3aWxsIGJlIGZpbmlzaGVkCgogICAgICAgICAgX3RoaXMucmVjb3JkZXIuc3RhcnQoKTsKCiAgICAgICAgICBfdGhpcy5yZWNvcmRlci5hZGRFdmVudExpc3RlbmVyKCJkYXRhYXZhaWxhYmxlIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgdmFyIGRhdGEgPSBlLmRhdGE7CgogICAgICAgICAgICBfdGhpcy5vblJlc3VsdChkYXRhKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCJFbmQgcmVjb3JkaW5nIik7CiAgICAgICAgdGhpcy5yZWNvcmRlci5zdG9wKCk7CiAgICAgIH0KICAgIH0sCiAgICByZW1vdmVSZWNvcmQ6IGZ1bmN0aW9uIHJlbW92ZVJlY29yZCgpIHsKICAgICAgdGhpcy5kaXJ0eSA9IHRydWU7CiAgICAgIHRoaXMuZGF0YVZhbHVlID0gbnVsbDsKICAgICAgdGhpcy5zZXRBbnN3ZXIobnVsbCk7CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgZmlsZXM6IGZ1bmN0aW9uIGZpbGVzKCkgewogICAgICByZXR1cm4gdGhpcy4kcmVmcy5pbnB1dC5maWxlczsKICAgIH0KICB9Cn07"},{"version":3,"sources":["FileType.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,OAAA,QAAA,MAAA,gBAAA;AACA,SAAA,YAAA,QAAA,4BAAA;AACA,OAAA,iBAAA,MAAA,qBAAA,C,CACA;;AACA,OAAA,aAAA,MAAA,oDAAA;AAEA,eAAA;AACA,EAAA,OAAA,EAAA,QADA;AAEA,EAAA,IAAA,EAAA,YAAA,CAAA,IAFA;AAIA,EAAA,UAAA,EAAA,EAJA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAAA;AAIA,GAXA;AAaA,EAAA,OAbA,qBAaA;AACA,QAAA,KAAA,QAAA,CAAA,MAAA,EAAA;AACA,WAAA,aAAA,GAAA,IAAA,MAAA,CACA,KAAA,QAAA,CAAA,MAAA,CAAA,OAAA,CAAA,GAAA,EAAA,UAAA,CADA,CAAA;AAGA;AACA,GAnBA;AAqBA,EAAA,YArBA,0BAqBA;AACA;AACA,QAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,MAAA,MAAA,CAAA,aAAA,GAAA,iBAAA;AACA;AACA,GA1BA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,KAAA,KAAA;AACA,WAAA,SAAA;AACA,KALA;AAOA,IAAA,QAPA,oBAOA,IAPA,EAOA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AACA,WAAA,KAAA,CAAA,QAAA,CAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AACA,WAAA,cAAA,CAAA,IAAA;AACA,KAZA;AAcA,IAAA,cAdA,0BAcA,IAdA,EAcA;AACA;AACA,UAAA,OAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,MAAA,QAAA,CAAA,IAAA,GAAA,OAAA;AACA,UAAA,MAAA,GAAA,IAAA,IAAA,EAAA;AACA,UAAA,SAAA,GAAA,CAAA,MAAA,MAAA,CAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,UAAA,GAAA,CAAA,OAAA,MAAA,CAAA,QAAA,KAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,MAAA,CAAA,WAAA,EAAA;AACA,UAAA,SAAA,GAAA,MAAA,CAAA,QAAA,EAAA;AACA,UAAA,WAAA,GAAA,MAAA,CAAA,UAAA,EAAA;AACA,UAAA,YAAA,GAAA,MAAA,CAAA,UAAA,EAAA;AACA,UAAA,QAAA,aAAA,SAAA,SAAA,UAAA,SAAA,SAAA,cAAA,SAAA,SAAA,WAAA,SAAA,YAAA,gBAAA;AACA,MAAA,QAAA,CAAA,YAAA,CAAA,UAAA,EAAA,QAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,QAAA;AAEA,MAAA,QAAA,CAAA,KAAA,GAhBA,CAiBA;AACA,KAhCA;AAkCA,IAAA,kBAlCA,gCAkCA;AAAA;;AACA,WAAA,SAAA,GAAA,CAAA,KAAA,SAAA;;AACA,UAAA,KAAA,SAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,iBAAA,EADA,CAEA;;AACA,YAAA,aAAA,GAAA;AACA,UAAA,oBAAA,EAAA;AAAA,mBAAA,IAAA,aAAA,EAAA;AAAA,WADA;AAEA,UAAA,sBAAA,EACA,6EAHA;AAIA,UAAA,uBAAA,EACA;AALA,SAAA;AAQA,QAAA,SAAA,CAAA,YAAA,CAAA,YAAA,CAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,IAAA,aAAA,CAAA,MAAA,EAAA,EAAA,EAAA,aAAA,CAAA,CAFA,CAGA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,KAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,gBAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA;AACA,gBAAA,IAAA,GAAA,CAAA,CAAA,IAAA;;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,IAAA;AACA,WAHA;AAIA,SATA;AAUA,OArBA,MAqBA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,eAAA;AACA,aAAA,QAAA,CAAA,IAAA;AACA;AACA,KA7DA;AA+DA,IAAA,YA/DA,0BA+DA;AACA,WAAA,KAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,WAAA,SAAA,CAAA,IAAA;AACA;AAnEA,GA5BA;AAiGA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,CAAA,KAAA;AACA;AAHA;AAjGA,CAAA","sourcesContent":["/* eslint-disable vue/valid-template-root */\n<template>\n  <div class=\"record-container\">\n    <button class=\"btn-circle\" v-if=\"dataValue\" @click=\"setAnswer(dataValue)\">\n      <i class=\"fa fa-check\"></i>\n    </button>\n\n    <div\n      v-if=\"$browserDetect.meta.name === 'Safari'\"\n      class=\"vue-audio-recorder\"\n      :class=\"{ active: recording }\"\n      @click=\"handleRecordSafari\"\n    >\n      <span></span>\n    </div>\n\n    <VueRecordAudio v-else mode=\"press\" @result=\"onResult\" />\n\n    <audio ref=\"audioRef\" v-show=\"dataValue\" controls />\n\n    <template v-if=\"dataValue\">\n      <button class=\"btn-circle\" @click=\"$refs.audioRef.play()\">\n        <i class=\"fa fa-play-circle\"></i>\n      </button>\n\n      <button class=\"btn-circle\" @click=\"removeRecord\">\n        <i class=\"fa fa-trash\" style=\"color: #ef5350\"></i>\n      </button>\n    </template>\n\n    <input\n      ref=\"input\"\n      type=\"file\"\n      v-bind:accept=\"question.accept\"\n      v-bind:multiple=\"question.multiple\"\n      v-bind:required=\"question.required\"\n      v-on:keyup.enter.prevent=\"onEnter\"\n      v-on:keyup.tab.prevent=\"onEnter\"\n      v-on:focus=\"setFocus\"\n      v-on:blur=\"unsetFocus\"\n      v-on:change=\"onChange\"\n      style=\"display: none\"\n    />\n  </div>\n</template>\n\n<script>\nimport BaseType from \"./BaseType.vue\";\nimport { QuestionType } from \"../../models/QuestionModel\";\nimport OpusMediaRecorder from \"opus-media-recorder\";\n// Use worker-loader\nimport EncoderWorker from \"worker-loader!opus-media-recorder/encoderWorker.js\";\n\nexport default {\n  extends: BaseType,\n  name: QuestionType.File,\n\n  components: {},\n\n  data() {\n    return {\n      recording: false,\n      recorder: null,\n    };\n  },\n\n  mounted() {\n    if (this.question.accept) {\n      this.mimeTypeRegex = new RegExp(\n        this.question.accept.replace(\"*\", \"[^\\\\/,]+\")\n      );\n    }\n  },\n\n  beforeCreate() {\n    // Check if MediaRecorder available.\n    if (!window.MediaRecorder) {\n      window.MediaRecorder = OpusMediaRecorder;\n    }\n  },\n\n  methods: {\n    onChange() {\n      this.dirty = true;\n      this.dataValue = this.files;\n      this.onKeyDown();\n    },\n\n    onResult(data) {\n      this.dirty = true;\n      this.dataValue = window.URL.createObjectURL(data);\n      this.$refs.audioRef.src = window.URL.createObjectURL(data);\n      this.handleSaveFile(data);\n    },\n\n    handleSaveFile(data) {\n      // Begin handle create file to download\n      const fileURL = window.URL.createObjectURL(new Blob([data]));\n      const fileLink = document.createElement(\"a\");\n      fileLink.href = fileURL;\n      const mydate = new Date();\n      const curr_date = (\"0\" + mydate.getDate()).slice(-2);\n      const curr_month = (\"0\" + (mydate.getMonth() + 1)).slice(-2);\n      const curr_year = mydate.getFullYear();\n      const curr_hour = mydate.getHours();\n      const curr_minute = mydate.getMinutes();\n      const curr_seconds = mydate.getSeconds();\n      const fileName = `${curr_year}${curr_month}${curr_date}_${curr_hour}${curr_minute}${curr_seconds}_record.wav`;\n      fileLink.setAttribute(\"download\", fileName);\n      document.body.appendChild(fileLink);\n\n      fileLink.click();\n      // Save file to local\n    },\n\n    handleRecordSafari() {\n      this.recording = !this.recording;\n      if (this.recording) {\n        console.log(\"Begin Recording\");\n        // Non-standard options\n        const workerOptions = {\n          encoderWorkerFactory: () => new EncoderWorker(),\n          OggOpusEncoderWasmPath:\n            \"https://cdn.jsdelivr.net/npm/opus-media-recorder@latest/OggOpusEncoder.wasm\",\n          WebMOpusEncoderWasmPath:\n            \"https://cdn.jsdelivr.net/npm/opus-media-recorder@latest/WebMOpusEncoder.wasm\",\n        };\n\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n          // Start recording\n          this.recorder = new MediaRecorder(stream, {}, workerOptions);\n          // Set record to <audio> when recording will be finished\n          this.recorder.start();\n          this.recorder.addEventListener(\"dataavailable\", (e) => {\n            const { data } = e;\n            this.onResult(data);\n          });\n        });\n      } else {\n        console.log(\"End recording\");\n        this.recorder.stop();\n      }\n    },\n\n    removeRecord() {\n      this.dirty = true;\n      this.dataValue = null;\n      this.setAnswer(null);\n    },\n  },\n  computed: {\n    files() {\n      return this.$refs.input.files;\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import url(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\");\n.record-container {\n  display: flex;\n  align-items: center;\n  margin-bottom: 3rem;\n}\n.record-container > * {\n  margin-left: 1rem;\n}\n.btn-circle {\n  width: 64px;\n  height: 64px;\n  padding: 0;\n  font-size: 50%;\n  border-radius: 50%;\n}\n</style>"],"sourceRoot":"src/components/QuestionTypes"}]}