{"remainingRequest":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/babel-loader/lib/index.js!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/src/components/Questions.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/src/components/Questions.vue","mtime":1635748043450},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/Hoiwa/demo-questionaire/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Questions.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <flow-form\n      v-if=\"!submitted\"\n      ref=\"flowform\"\n      @step=\"onStep\"\n      @answer=\"onAnswer\"\n      @submit=\"onSubmit\"\n      :questions=\"questions\"\n      :language=\"language\"\n      :standalone=\"true\"\n    >\n    </flow-form>\n    <ul v-else>\n      <li v-for=\"question in questions\" :key=\"question.id\">\n        <p>{{ question.index + 1 }} . {{ question.title }}</p>\n        <p>\n          {{\n            question.id !== \"FlowFormFileType\"\n              ? question.answer\n              : question[0].name\n          }}\n        </p>\n        <hr />\n      </li>\n      <li v-if=\"attachFile\">\n        <p>attachFile</p>\n        <audio controls>\n          <source :src=\"attachFile\" />\n        </audio>\n        <hr />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport FlowForm from \"./FlowForm.vue\";\nimport LanguageModel from \"./../models/LanguageModel\";\nimport QuestionModel, { QuestionType } from \"./../models/QuestionModel\";\nimport OpusMediaRecorder from \"opus-media-recorder\";\n// Use worker-loader\nimport EncoderWorker from \"worker-loader!opus-media-recorder/encoderWorker.js\";\n\nexport default {\n  components: {\n    FlowForm,\n  },\n  data() {\n    return {\n      submitted: false,\n      completed: false,\n      attachFile: null,\n      recording: false,\n      recorder: null,\n      recordFile: null,\n      language: new LanguageModel({\n        enterKey: this.$t(\"enterKey\"),\n        shiftKey: this.$t(\"shiftKey\"),\n        ok: this.$t(\"ok\"),\n        continue: this.$t(\"continue\"),\n        skip: this.$t(\"skip\"),\n        pressEnter: this.$t(\"pressEnter\"),\n        multipleChoiceHelpText: this.$t(\"multipleChoiceHelpText\"),\n        multipleChoiceHelpTextSingle: this.$t(\"multipleChoiceHelpTextSingle\"),\n        otherPrompt: this.$t(\"otherPrompt\"),\n        placeholder: this.$t(\"placeholder\"),\n        submitText: this.$t(\"submitText\"),\n        longTextHelpText: this.$t(\"longTextHelpText\"),\n        prev: this.$t(\"prev\"),\n        next: this.$t(\"next\"),\n        percentCompleted: this.$t(\"percentCompleted\"),\n        invalidPrompt: this.$t(\"invalidPrompt\"),\n        thankYouText: this.$t(\"thankYouText\"),\n        successText: this.$t(\"successText\"),\n        ariaOk: this.$t(\"ariaOk\"),\n        ariaRequired: this.$t(\"ariaRequired\"),\n        ariaPrev: this.$t(\"ariaPrev\"),\n        ariaNext: this.$t(\"ariaNext\"),\n        ariaSubmitText: this.$t(\"ariaSubmitText\"),\n        ariaMultipleChoice: this.$t(\"ariaMultipleChoice\"),\n        ariaTypeAnswer: this.$t(\"ariaTypeAnswer\"),\n      }),\n      questions: [\n        new QuestionModel({\n          id: \"first_name\",\n          tagline: \"Hi! Welcome to our demo survey 😊\",\n          title: \"What is your first name?\",\n          type: QuestionType.Text,\n          placeholder: \"Start typing here...\",\n        }),\n        new QuestionModel({\n          id: \"file\",\n          title: \"Tell me about your previous job\",\n          type: QuestionType.File,\n          allowOther: true,\n        }),\n      ],\n    };\n  },\n\n  beforeCreate() {\n    // Check if MediaRecorder available.\n    if (!window.MediaRecorder) {\n      window.MediaRecorder = OpusMediaRecorder;\n    }\n  },\n\n  methods: {\n    /* eslint-disable-next-line no-unused-vars */\n    onComplete(completed, questionList) {\n      // This method is called whenever the \"completed\" status is changed.\n      this.completed = completed;\n    },\n\n    onAnswer(questionAnswered) {\n      console.log(\"onAnswer\");\n      console.log(questionAnswered);\n    },\n\n    onStep(question) {\n      console.log(\"onStep\");\n      console.log(question);\n    },\n\n    /* eslint-disable-next-line no-unused-vars */\n    onSubmit(questionList) {\n      // This method will only be called if you don't override the\n      // completeButton slot.\n      // this.onSendData()\n      console.log(\"onSubmit\");\n      this.submitted = true;\n      // console.log(questionList);\n      questionList.forEach((question) => {\n        console.log(\"question : \");\n        console.log(question.title);\n        console.log(\"answer: \");\n        console.log(question.answer);\n      });\n    },\n\n    onSendData() {\n      console.log(\"okeke onSendData\");\n      // Set `submitted` to true so the form knows not to allow back/forward\n      // navigation anymore.\n      // this.$refs.flowform.submit();\n      this.$refs.flowform.submitted = true;\n\n      this.submitted = true;\n\n      /* eslint-disable-next-line no-unused-vars */\n      const data = this.getData();\n      /*\n          You can use Fetch API to send the data to your server, eg.:\n\n          fetch(url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n        */\n    },\n\n    getData() {\n      const data = {\n        questions: [],\n        answers: [],\n      };\n\n      this.questions.forEach((question) => {\n        if (question.title) {\n          let answer = question.answer;\n          if (Array.isArray(answer)) {\n            answer = answer.join(\", \");\n          }\n\n          data.questions.push(question.title);\n          data.answers.push(answer);\n        }\n      });\n\n      return data;\n    },\n\n    onStream(stream) {\n      console.log(\"Got a stream object:\", stream);\n    },\n\n    onResult(data) {\n      console.log(\"onResult\");\n      this.attachFile = window.URL.createObjectURL(new Blob([data]));\n      const fileURL = window.URL.createObjectURL(new Blob([data]));\n      const fileLink = document.createElement(\"a\");\n      fileLink.href = fileURL;\n      const mydate = new Date();\n      const curr_date = (\"0\" + mydate.getDate()).slice(-2);\n      const curr_month = (\"0\" + (mydate.getMonth() + 1)).slice(-2);\n      const curr_year = mydate.getFullYear();\n      const curr_hour = mydate.getHours();\n      const curr_minute = mydate.getMinutes();\n      const curr_seconds = mydate.getSeconds();\n      const fileName = `${curr_year}${curr_month}${curr_date}_${curr_hour}${curr_minute}${curr_seconds}_record.wav`;\n      fileLink.setAttribute(\"download\", fileName);\n      document.body.appendChild(fileLink);\n\n      fileLink.click();\n    },\n\n    handleRecordSafari() {\n      this.recording = !this.recording;\n      if (this.recording) {\n        console.log(\"Recording\");\n        // Non-standard options\n        const workerOptions = {\n          encoderWorkerFactory: () => new EncoderWorker(),\n          OggOpusEncoderWasmPath:\n            \"https://cdn.jsdelivr.net/npm/opus-media-recorder@latest/OggOpusEncoder.wasm\",\n          WebMOpusEncoderWasmPath:\n            \"https://cdn.jsdelivr.net/npm/opus-media-recorder@latest/WebMOpusEncoder.wasm\",\n        };\n\n        navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n          // Start recording\n          this.recorder = new MediaRecorder(stream, {}, workerOptions);\n          // Set record to <audio> when recording will be finished\n          this.recorder.start();\n          this.recorder.addEventListener(\"dataavailable\", (e) => {\n            this.recordFile = e.data;\n          });\n        });\n      } else {\n        console.log(\"End recording\");\n        const fileURL = window.URL.createObjectURL(new Blob([this.recordFile]));\n        const fileLink = document.createElement(\"a\");\n        fileLink.href = fileURL;\n        const mydate = new Date();\n        const curr_date = (\"0\" + mydate.getDate()).slice(-2);\n        const curr_month = (\"0\" + (mydate.getMonth() + 1)).slice(-2);\n        const curr_year = mydate.getFullYear();\n        const curr_hour = mydate.getHours();\n        const curr_minute = mydate.getMinutes();\n        const curr_seconds = mydate.getSeconds();\n        const fileName = `${curr_year}${curr_month}${curr_date}_${curr_hour}${curr_minute}${curr_seconds}_record.wav`;\n        fileLink.setAttribute(\"download\", fileName);\n        document.body.appendChild(fileLink);\n\n        fileLink.click();\n        this.recorder.stop();\n        this.recorder.removeEventListener(\"dataavailable\", () => {\n          this.recordFile = null;\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import \"~@ditdot-dev/vue-flow-form/dist/vue-flow-form.css\";\n@import \"~@ditdot-dev/vue-flow-form/dist/vue-flow-form.theme-green.css\";\n</style>"],"sourceRoot":"src/components"}]}