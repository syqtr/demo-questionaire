{"remainingRequest":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js!/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sytruong/demo-questionaire/src/components/QuestionList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sytruong/demo-questionaire/src/components/QuestionList.vue","mtime":1635838773487},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/babel-loader/lib/index.js","mtime":1627740747092},{"path":"/Users/sytruong/demo-questionaire/node_modules/cache-loader/dist/cjs.js","mtime":1627740747088},{"path":"/Users/sytruong/demo-questionaire/node_modules/vue-loader/lib/index.js","mtime":1634035958257}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEZsb3dGb3JtIGZyb20gIi4vRmxvd0Zvcm0udnVlIjsKaW1wb3J0IExhbmd1YWdlTW9kZWwgZnJvbSAiLi4vbW9kZWxzL0xhbmd1YWdlTW9kZWwiOwppbXBvcnQgUXVlc3Rpb25Nb2RlbCwgeyBRdWVzdGlvblR5cGUsIENob2ljZU9wdGlvbiB9IGZyb20gIi4uL21vZGVscy9RdWVzdGlvbk1vZGVsIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEZsb3dGb3JtOiBGbG93Rm9ybQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHN1Ym1pdHRlZDogZmFsc2UsCiAgICAgIGxhbmd1YWdlOiBuZXcgTGFuZ3VhZ2VNb2RlbCh7CiAgICAgICAgZW50ZXJLZXk6IHRoaXMuJHQoImVudGVyS2V5IiksCiAgICAgICAgc2hpZnRLZXk6IHRoaXMuJHQoInNoaWZ0S2V5IiksCiAgICAgICAgb2s6IHRoaXMuJHQoIm9rIiksCiAgICAgICAgY29udGludWU6IHRoaXMuJHQoImNvbnRpbnVlIiksCiAgICAgICAgc2tpcDogdGhpcy4kdCgic2tpcCIpLAogICAgICAgIHByZXNzRW50ZXI6IHRoaXMuJHQoInByZXNzRW50ZXIiKSwKICAgICAgICBtdWx0aXBsZUNob2ljZUhlbHBUZXh0OiB0aGlzLiR0KCJtdWx0aXBsZUNob2ljZUhlbHBUZXh0IiksCiAgICAgICAgbXVsdGlwbGVDaG9pY2VIZWxwVGV4dFNpbmdsZTogdGhpcy4kdCgibXVsdGlwbGVDaG9pY2VIZWxwVGV4dFNpbmdsZSIpLAogICAgICAgIG90aGVyUHJvbXB0OiB0aGlzLiR0KCJvdGhlclByb21wdCIpLAogICAgICAgIHBsYWNlaG9sZGVyOiB0aGlzLiR0KCJwbGFjZWhvbGRlciIpLAogICAgICAgIHN1Ym1pdFRleHQ6IHRoaXMuJHQoInN1Ym1pdFRleHQiKSwKICAgICAgICBsb25nVGV4dEhlbHBUZXh0OiB0aGlzLiR0KCJsb25nVGV4dEhlbHBUZXh0IiksCiAgICAgICAgcHJldjogdGhpcy4kdCgicHJldiIpLAogICAgICAgIG5leHQ6IHRoaXMuJHQoIm5leHQiKSwKICAgICAgICBwZXJjZW50Q29tcGxldGVkOiB0aGlzLiR0KCJwZXJjZW50Q29tcGxldGVkIiksCiAgICAgICAgaW52YWxpZFByb21wdDogdGhpcy4kdCgiaW52YWxpZFByb21wdCIpLAogICAgICAgIHRoYW5rWW91VGV4dDogdGhpcy4kdCgidGhhbmtZb3VUZXh0IiksCiAgICAgICAgc3VjY2Vzc1RleHQ6IHRoaXMuJHQoInN1Y2Nlc3NUZXh0IiksCiAgICAgICAgYXJpYU9rOiB0aGlzLiR0KCJhcmlhT2siKSwKICAgICAgICBhcmlhUmVxdWlyZWQ6IHRoaXMuJHQoImFyaWFSZXF1aXJlZCIpLAogICAgICAgIGFyaWFQcmV2OiB0aGlzLiR0KCJhcmlhUHJldiIpLAogICAgICAgIGFyaWFOZXh0OiB0aGlzLiR0KCJhcmlhTmV4dCIpLAogICAgICAgIGFyaWFTdWJtaXRUZXh0OiB0aGlzLiR0KCJhcmlhU3VibWl0VGV4dCIpLAogICAgICAgIGFyaWFNdWx0aXBsZUNob2ljZTogdGhpcy4kdCgiYXJpYU11bHRpcGxlQ2hvaWNlIiksCiAgICAgICAgYXJpYVR5cGVBbnN3ZXI6IHRoaXMuJHQoImFyaWFUeXBlQW5zd2VyIikKICAgICAgfSksCiAgICAgIHF1ZXN0aW9uczogW25ldyBRdWVzdGlvbk1vZGVsKHsKICAgICAgICBpZDogImZpcnN0X25hbWUiLAogICAgICAgIHRhZ2xpbmU6ICJIaSEgV2VsY29tZSB0byBvdXIgZGVtbyBzdXJ2ZXkg8J+YiiIsCiAgICAgICAgdGl0bGU6ICJXaGF0IGlzIHlvdXIgZmlyc3QgbmFtZT8iLAogICAgICAgIHR5cGU6IFF1ZXN0aW9uVHlwZS5UZXh0LAogICAgICAgIHBsYWNlaG9sZGVyOiAiU3RhcnQgdHlwaW5nIGhlcmUuLi4iCiAgICAgIH0pLCBuZXcgUXVlc3Rpb25Nb2RlbCh7CiAgICAgICAgaWQ6ICJlbWFpbCIsCiAgICAgICAgdGFnbGluZTogIk5pY2UgdG8gbWVldCB5b3Ug8J+RgCwgbGV0J3MgY29udGludWUiLAogICAgICAgIHRpdGxlOiAiUHJvdmlkZSBhbiBleGFtcGxlIGVtYWlsLiIsCiAgICAgICAgdHlwZTogUXVlc3Rpb25UeXBlLkVtYWlsLAogICAgICAgIHBsYWNlaG9sZGVyOiAiU3RhcnQgdHlwaW5nIGhlcmUuLi4iCiAgICAgIH0pLCBuZXcgUXVlc3Rpb25Nb2RlbCh7CiAgICAgICAgaWQ6ICJwaG9uZSIsCiAgICAgICAgdGl0bGU6ICJEb2luZyBncmVhdCEg8J+RjSBHbyBhaGVhZCBhbmQgdHJ5IHdpdGggYSBwaG9uZSBudW1iZXIuIiwKICAgICAgICB0eXBlOiBRdWVzdGlvblR5cGUuUGhvbmUsCiAgICAgICAgbWFzazogIiMjIyMtIyMjLSMjIyIKICAgICAgfSksIC8vIFRoaXMgaXMgcXVlc3Rpb24gZm9yIHJlY29yZAogICAgICBuZXcgUXVlc3Rpb25Nb2RlbCh7CiAgICAgICAgaWQ6ICJmaWxlIiwKICAgICAgICB0aXRsZTogIlRlbGwgbWUgYWJvdXQgeW91LiIsCiAgICAgICAgdHlwZTogUXVlc3Rpb25UeXBlLkZpbGUsCiAgICAgICAgYWxsb3dPdGhlcjogdHJ1ZSwKICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICB9KSwgbmV3IFF1ZXN0aW9uTW9kZWwoewogICAgICAgIGlkOiAicGxhY2VfY2hvaWNlcyIsCiAgICAgICAgdGl0bGU6ICJXaGVyZSBhcmUgeW91IGZyb20/IiwKICAgICAgICB0eXBlOiBRdWVzdGlvblR5cGUuTXVsdGlwbGVDaG9pY2UsCiAgICAgICAgbXVsdGlwbGU6IGZhbHNlLAogICAgICAgIGhlbHBUZXh0OiAiU2VsZWN0IHlvdXIgcGxhY2UuIPCfkYciLAogICAgICAgIG9wdGlvbnM6IFtuZXcgQ2hvaWNlT3B0aW9uKHsKICAgICAgICAgIGxhYmVsOiAiUGFyaXMiCiAgICAgICAgfSksIG5ldyBDaG9pY2VPcHRpb24oewogICAgICAgICAgbGFiZWw6ICJMb2RvbiIKICAgICAgICB9KSwgbmV3IENob2ljZU9wdGlvbih7CiAgICAgICAgICBsYWJlbDogIkhlbHNpbmtpIgogICAgICAgIH0pLCBuZXcgQ2hvaWNlT3B0aW9uKHsKICAgICAgICAgIGxhYmVsOiAiQmVybGluIgogICAgICAgIH0pXQogICAgICB9KV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBvblN1Ym1pdDogZnVuY3Rpb24gb25TdWJtaXQoKSB7CiAgICAgIHRoaXMuc3VibWl0dGVkID0gdHJ1ZTsKICAgIH0sCiAgICBvblNlbmREYXRhOiBmdW5jdGlvbiBvblNlbmREYXRhKCkgewogICAgICBjb25zb2xlLmxvZygib2tla2Ugb25TZW5kRGF0YSIpOyAvLyBTZXQgYHN1Ym1pdHRlZGAgdG8gdHJ1ZSBzbyB0aGUgZm9ybSBrbm93cyBub3QgdG8gYWxsb3cgYmFjay9mb3J3YXJkCiAgICAgIC8vIG5hdmlnYXRpb24gYW55bW9yZS4KICAgICAgLy8gdGhpcy4kcmVmcy5mbG93Zm9ybS5zdWJtaXQoKTsKCiAgICAgIHRoaXMuJHJlZnMuZmxvd2Zvcm0uc3VibWl0dGVkID0gdHJ1ZTsKICAgICAgdGhpcy5zdWJtaXR0ZWQgPSB0cnVlOwogICAgICAvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMgKi8KCiAgICAgIHZhciBkYXRhID0gdGhpcy5nZXREYXRhKCk7CiAgICAgIC8qCiAgICAgICAgICBZb3UgY2FuIHVzZSBGZXRjaCBBUEkgdG8gc2VuZCB0aGUgZGF0YSB0byB5b3VyIHNlcnZlciwgZWcuOgogICAgICAgICAgIGZldGNoKHVybCwgewogICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSkKICAgICAgICAgIH0pCiAgICAgICAgKi8KICAgIH0KICB9Cn07"},{"version":3,"sources":["QuestionList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <flow-form\n      ref=\"flowform\"\n      @submit=\"onSubmit\"\n      :questions=\"questions\"\n      :language=\"language\"\n      :standalone=\"true\"\n    >\n      <template v-if=\"!submitted\" v-slot:complete>\n        <ul style=\"margin-bottom: 3rem\">\n          <li v-for=\"question in questions\" :key=\"question.id\">\n            <p>{{ question.index + 1 }} . {{ question.title }}</p>\n            <audio v-if=\"question.type === 'FlowFormFileType'\" controls>\n              <source :src=\"question.answer\" />\n            </audio>\n            <p v-else style=\"color: black; font-style: italic\">\n              {{ question.answer || \"not answer\" }}\n            </p>\n            <hr />\n          </li>\n        </ul>\n      </template>\n    </flow-form>\n  </div>\n</template>\n\n<script>\nimport FlowForm from \"./FlowForm.vue\";\nimport LanguageModel from \"../models/LanguageModel\";\nimport QuestionModel, {\n  QuestionType,\n  ChoiceOption,\n} from \"../models/QuestionModel\";\n\nexport default {\n  components: {\n    FlowForm,\n  },\n  data() {\n    return {\n      submitted: false,\n      language: new LanguageModel({\n        enterKey: this.$t(\"enterKey\"),\n        shiftKey: this.$t(\"shiftKey\"),\n        ok: this.$t(\"ok\"),\n        continue: this.$t(\"continue\"),\n        skip: this.$t(\"skip\"),\n        pressEnter: this.$t(\"pressEnter\"),\n        multipleChoiceHelpText: this.$t(\"multipleChoiceHelpText\"),\n        multipleChoiceHelpTextSingle: this.$t(\"multipleChoiceHelpTextSingle\"),\n        otherPrompt: this.$t(\"otherPrompt\"),\n        placeholder: this.$t(\"placeholder\"),\n        submitText: this.$t(\"submitText\"),\n        longTextHelpText: this.$t(\"longTextHelpText\"),\n        prev: this.$t(\"prev\"),\n        next: this.$t(\"next\"),\n        percentCompleted: this.$t(\"percentCompleted\"),\n        invalidPrompt: this.$t(\"invalidPrompt\"),\n        thankYouText: this.$t(\"thankYouText\"),\n        successText: this.$t(\"successText\"),\n        ariaOk: this.$t(\"ariaOk\"),\n        ariaRequired: this.$t(\"ariaRequired\"),\n        ariaPrev: this.$t(\"ariaPrev\"),\n        ariaNext: this.$t(\"ariaNext\"),\n        ariaSubmitText: this.$t(\"ariaSubmitText\"),\n        ariaMultipleChoice: this.$t(\"ariaMultipleChoice\"),\n        ariaTypeAnswer: this.$t(\"ariaTypeAnswer\"),\n      }),\n      questions: [\n        new QuestionModel({\n          id: \"first_name\",\n          tagline: \"Hi! Welcome to our demo survey 😊\",\n          title: \"What is your first name?\",\n          type: QuestionType.Text,\n          placeholder: \"Start typing here...\",\n        }),\n        new QuestionModel({\n          id: \"email\",\n          tagline: \"Nice to meet you 👀, let's continue\",\n          title: \"Provide an example email.\",\n          type: QuestionType.Email,\n          placeholder: \"Start typing here...\",\n        }),\n        new QuestionModel({\n          id: \"phone\",\n          title: \"Doing great! 👍 Go ahead and try with a phone number.\",\n          type: QuestionType.Phone,\n          mask: \"####-###-###\",\n        }),\n        // This is question for record\n        new QuestionModel({\n          id: \"file\",\n          title: \"Tell me about you.\",\n          type: QuestionType.File,\n          allowOther: true,\n          required: true,\n        }),\n\n        new QuestionModel({\n          id: \"place_choices\",\n          title: \"Where are you from?\",\n          type: QuestionType.MultipleChoice,\n          multiple: false,\n          helpText: \"Select your place. 👇\",\n          options: [\n            new ChoiceOption({\n              label: \"Paris\",\n            }),\n            new ChoiceOption({\n              label: \"Lodon\",\n            }),\n            new ChoiceOption({\n              label: \"Helsinki\",\n            }),\n            new ChoiceOption({\n              label: \"Berlin\",\n            }),\n          ],\n        }),\n      ],\n    };\n  },\n\n  methods: {\n    onSubmit() {\n      this.submitted = true;\n    },\n\n    onSendData() {\n      console.log(\"okeke onSendData\");\n      // Set `submitted` to true so the form knows not to allow back/forward\n      // navigation anymore.\n      // this.$refs.flowform.submit();\n      this.$refs.flowform.submitted = true;\n\n      this.submitted = true;\n\n      /* eslint-disable-next-line no-unused-vars */\n      const data = this.getData();\n      /*\n          You can use Fetch API to send the data to your server, eg.:\n\n          fetch(url, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n          })\n        */\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import \"~@ditdot-dev/vue-flow-form/dist/vue-flow-form.css\";\n@import \"~@ditdot-dev/vue-flow-form/dist/vue-flow-form.theme-green.css\";\n</style>"],"sourceRoot":"src/components"}]}